{"version":3,"sources":["history.js","classes/API.js","classes/User.js","mixpanel.js","components/pages/Landing/Landing.js","actions/authActions.js","actions/types.js","actions/goalsActions.js","actions/uiActions.js","actions/boardActions.js","components/pages/Base/Header/UserMenu.js","components/pages/Base/Header/Header.js","components/UI/Alert/Alert.js","components/pages/Landing/Login/Login.js","components/UI/ValidationMessage/ValidationMessage.js","components/pages/Landing/Register/Register.js","components/UI/Loading/Loading.js","components/UI/Dropdown/Dropdown.js","actions/checkListAction.js","components/UI/forms/CheckList.js","components/UI/Modal/Modal.js","components/pages/Board/ShortTermGoal/GoalContentModal.js","components/UI/Datepicker/index.js","components/pages/Board/ShortTermGoal/EditShortTermGoalModal.js","components/pages/Board/ShortTermGoal/ShortTermGoal.js","components/UI/TextArea/index.js","components/UI/Checkbox/index.js","components/UI/Input/index.js","components/pages/Board/ShortTermGoal/AddShortTermGoalModal.js","components/pages/Board/LongTermGoal/AddLongTermGoalModal.js","components/pages/Board/LongTermGoal/EditLongTermGoalModal.js","components/pages/Board/LongTermGoal/LongTermGoal.js","components/pages/Board/Board.js","components/pages/Landing/Legal/TermsOfUse.js","components/pages/Landing/Legal/PrivacyPolicy.js","components/pages/Base/Footer/Footer.js","components/pages/Landing/Preferences/Preferences.js","components/App.js","reducers/authReducer.js","reducers/UI/alertReducer.js","reducers/goalReducer.js","reducers/UI/uiReducer.js","reducers/checklistReducer.js","reducers/index.js","index.js"],"names":["createBrowserHistory","API","url","env","path","method","data","arguments","length","undefined","customHeader","token","JSON","parse","localStorage","getItem","Authorization","concat","access","error","history","push","pathname","customAxios","axios","create","baseURL","getConfig","headers","Promise","resolve","reject","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","sent","stop","User","user","console","log","request","then","status","setTimeout","window","location","replace","message","title","description","catch","credentials","_ref","post","qs","stringify","withCredentials","Content-type","cache-control","baseUrl","abrupt","apply","this","userLogin","clear","href","num","col","mixpanel","init","env_check","Mixpanel","identify","id","alias","track","name","props","people","set","Landing","react_default","createElement","Fragment","className","isLoggedIn","react_router_dom","to","src","alt","Component","connect","state","dispatch","type","payload","content","_response$data","refresh","setItem","t0","_x","userLogout","loadGoals","getState","_x2","deleteGoal","_ref2","_callee2","_context2","_x3","loadUserGoalsCategories","_ref4","_callee4","_context4","_x5","createGoal","_ref7","_callee7","_context7","_x8","createLongTermGoal","_ref8","_callee8","_context8","_response$data2","_x9","toggleModal","ui","modals","changeBoardShowGoal","UserMenu","_this","onClick","auth","Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFilter","e","filterGoals","target","value","userMenuOpen","userInfoRefresh","_this2","updateLocation","unlisten","listen","action","alert","showAlert","boardShowGoals","_this3","setState","_this4","boardCategories","aria-current","onChange","key","map","goalCategory","index","onHandleBoardSwitchItem","onBoardSwitch","onOpenMenuClick","userInfo","firstName","Header_UserMenu","style","width","_state$ui","category","_x4","Alert","clearAlert","Login","onSubmit","formValues","placeholder","input","label","meta","assign","UI_Alert_Alert","onRenderAlert","handleSubmit","Field","component","renderInput","formWrapped","reduxForm","form","ValidationMessage","Register","agreeTermsOfUse","userRegister","canRedirectLogin","email","password","touched","UI_ValidationMessage_ValidationMessage","children","validate","required","renderCheckbox","disabled","valid","v","enableReinitialize","initialValues","lastName","_ref3","_callee3","_context3","$email","$created","Date","$last_login","$first_name","$last_name","Loading","Dropdown","uiDropdownClass","uiDropdownMenuClass","uiDropdownMenuStyle","display","tabIndex","stopPropagation","onToggleDropdown","opacity","triggerParentEditModal","triggerParentOpenModal","triggerParentDelete","fetchItem","goalId","CheckList","item","checklist","goal_id","updateItem","resp","hideForm","addItem","goalContent","initialize","optional","_ref2$meta","warning","rows","textarea","renderInputTextArea","button","ownProps","myProps","objectSpread","itemId","Modal","showChecklistForm","editChecklist","handleClick","changeStatus","deleteItem","prevProps","prevState","snapshot","items","ReactDOM","onClose","defaultChecked","forms_CheckList","textDecoration","actions","document","querySelector","GoalContentModal","shortTermGoal","_this$props$myProps$s","deadline","dist_default","format","onRenderStatus","onEdit","UI_Modal_Modal","renderDatePicker","selectedDate","handleChange","date","currentDeadline","_this$props","_this$props$meta","rest","objectWithoutProperties","react_datepicker_es","selected","React","defaultProps","inputValueFormat","EditShortTermGoalModal","formOutput","goal_data","column_id","editGoals","dateFormatCalendar","placeholderText","fixedHeight","showMonthDropdown","showYearDropdown","minDate","maxDate","dropdownMode","normalize","moment","DatePicker","renderInputCheckbox","split","duration_hrs","priority","goal","_response$data3","ShortTermGoal","characterLimit","statusId","goalChangeStatus","goalSetPriority","_this5","onGoalSetStatus","ShortTermGoal_GoalContentModal","editShortTermGoal","ShortTermGoal_EditShortTermGoalModal","goalStyle","cardCategoryStyle","_this6","_this$props$myProps$s2","longTermBoardName","onOpenGoalContentModal","UI_Dropdown_Dropdown","onDeleteGoal","onOpenModal","onEditGoal","substring","onRenderPriority","onGoalSetPriority","onRenderActions","onRenderGoalContentModal","renderEditShortTermModal","_ref5","_callee5","_context5","_x6","newPriority","_ref6","_callee6","_context6","_x7","AddShortTermGoalModal","longTermGoalId","AddLongTermGoalModal","change","renderInputSelectBoards","onRenderBoardOptions","UI_Loading_Loading","board_id","EditLongTermGoalModal","column_data","longTermGoal","editColumns","boardName","find","scrollableYearDropdown","column","_response$data4","LongTermGoal","indexOf","join","toLowerCase","ShortTermGoal_AddShortTermGoalModal","LongTermGoal_AddLongTermGoalModal","deleteLongTermGoal","shortTermGoals","Board_ShortTermGoal_ShortTermGoal","onOpenShortTermGoalModal","onConvertBoardNameClass","editLongTermGoal","LongTermGoal_EditLongTermGoalModal","onDeleteLongTermGoal","onOpenLongTermGoalModal","onEditLongTermGoalModal","completedGoalsProportion","percentageComplete","data-simplebar","data-simplebar-auto-hide","onRenderShortTermGoals","onRenderShortTermGoalModal","onRenderLongTermGoalModal","onRenderEditLongTermGoals","goals","filter","isSame","Board","long_term_goals","long_term_goal","completedGoalsString","total_completed_goals","total_goals","percentageCompleteString","Board_LongTermGoal_LongTermGoal","short_term_goals","onRenderGoals","onOpenLongTermModal","TermsOfUse","adminEmail","productionUrl","PrivacyPolicy","withRouter","Preferences","errors","App","checkLoggedIn","react_router","Base_Header_Header","exact","Base_Footer_Footer","INITIAL_STATE","isTextAreaOpen","combineReducers","_action$payload","_action$payload2","first_name","last_name","formReducer","defineProperty","toConsumableArray","newItems","newItem","newItemDel","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","logger","render","es","src_components_App"],"mappings":"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","file":"static/js/main.aa7af36e.chunk.js","sourcesContent":["import {createBrowserHistory} from 'history';\nexport default createBrowserHistory();","import axios from 'axios';\nimport history from '../history';\nimport env from '../env.json';\n\nexport default class API {\n\n    static getConfig() {\n        return {\n            url: env.path\n        }\n    }\n\n    static request(url, method, data = {}, type = 'auth') {\n\n        let customHeader = {};\n\n        if (type === 'auth') { //if we're trying to access a authenticated route\n            try {\n                const token = JSON.parse(localStorage.getItem('userToken')); //set token as Authorization Bearer\n                customHeader = {\n                    Authorization: `Bearer ${token.access}`\n                }\n            }\n            catch (error) { //if something wrong happens, lets just redirect the user to login and show an error message\n                // console.log(error);\n                // history.push({pathname: '/login', state: {alert: 'Please, login before accessing this page'}})\n                history.push({pathname: '/'})\n            }\n        }\n\n        const customAxios = axios.create({\n            baseURL: API.getConfig().url,\n            headers: customHeader\n        });\n\n        return new Promise((resolve, reject) => {\n            try {\n                (async () => {\n                    const response = await customAxios({\n                        method,\n                        url,\n                        data\n                    });\n                    resolve(response);\n                })();\n            }\n            catch (error) {                \n                reject(error)\n            }\n        });\n\n    }\n}\n","import API from './API'\nimport qs from 'qs';\nimport axios from \"axios\";\n\n//lets load our custom AXIOS client\n//We're doing it to avoid having to type the server URL every time we do a request\n\n \nexport default class User {\n\n    static register(user) {\n        //request to server to register a new user\n        console.log(user);\n        \n        return API.request('POST', `/user/register/`, user, false).then(response => {\n            console.log(response.data);\n\n            console.log(response.data.status);\n\n            if (response.data.status === 'success') {\n\n                console.log(\"User account created successfully!\");\n\n                setTimeout(() => {\n                    window.location.replace(\"/login\");\n                }, 3000);\n\n                return {\n                    message: {\n                        title: \"Welcome\",\n                        description: response.data.message,\n                        status: response.data.status\n                    }\n                };\n\n\n            } else {\n                console.log('register operation failed');\n\n                return {\n                    message: {\n                        title: \"Oops!\",\n                        description: response.data.message,\n                        status: response.data.status\n                    }\n                };\n\n\n            }\n        }).catch(error => {\n            console.log('register error: ');\n            console.log(error)\n        });\n\n    }\n\n    static login(credentials) {\n\n        const userLogin = async () => {\n\n            //login is a little bit different from other post routes.. we should use qs.stringify because it should emulate a form submission (django API.requirement)\n\n            const response = await axios.post(`/api/token/`, qs.stringify(credentials), {\n                withCredentials: true,\n                headers: {\n                    \"Authorization\": \"Basic Og==\",\n                    \"Content-type\": \"application/x-www-form-urlencoded\",\n                    \"cache-control\": \"no-cache\",\n\n                }, baseURL: API.getConfig().baseUrl\n            });\n\n            return response.data\n\n\n        };\n        return userLogin();\n\n\n    }\n\n    static isLoggedIn() {\n\n        //try to get token information from localstorage.\n\n        try {\n            // console.log(\"checking if user is logged in...\");\n            let token = JSON.parse(localStorage.getItem('user')).token;\n            if (token) {\n                return true;\n            }\n\n            // console.log(`Yes, he's. Token: ${token}`);\n        }\n        catch (error) {\n            return false;\n        }\n\n\n    }\n\n    static getToken() {\n\n        //try to get token information from localstorage.\n        try {\n            // console.log(\"checking if user is logged in...\");\n            let token = JSON.parse(localStorage.getItem('user')).token;\n            // console.log(`Yes, he's. Token: ${token}`);\n            return token;\n        }\n        catch (error) {\n            return false;\n        }\n\n    }\n\n    static logout() {\n\n\n        console.log('logging out user');\n\n        //lets clear our cache (token)\n        localStorage.clear();\n\n        //then redirect user to login page.\n\n        window.location.href = '/login';\n\n\n    }\n\n    /* BOARD FUNCTIONS =========================================== */\n\n    static getBoard() {\n\n        return API.request('GET', '/boards', null, true);\n\n        // return API.oggedMode.get(`/boards`);\n    }\n\n\n    /* COLUMN FUNCTIONS =========================================== */\n\n    static getColumns(num) {\n        return API.request('GET', `/columns/board/${num}`, null, true)\n    }\n\n\n    /* GOAL FUNCTIONS =========================================== */\n\n\n    static createGoal(col) {\n        return API.request('POST', `/goals/create/`, col, true);\n    }\n\n\n}\n","import mixpanel from 'mixpanel-browser';\nimport env from './env.json';\n\nmixpanel.init('733676f34daec2cfda7cd776112e88f5');\n\nlet env_check = env.env === 'prod';\n\nlet actions = {\n    identify: (id) => {\n        if (env_check) mixpanel.identify(id);\n    },\n    alias: (id) => {\n        if (env_check) mixpanel.alias(id);\n    },\n    track: (name, props) => {\n        if (env_check) mixpanel.track(name, props);\n    },\n    people: {\n        set: (props) => {\n            if (env_check) mixpanel.people.set(props);\n        },\n    },\n};\n\nexport let Mixpanel = actions;\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {NavLink} from \"react-router-dom\";\nimport User from '../../../classes/User';\nimport {Mixpanel} from '../../../mixpanel';\n\nclass Landing extends Component {\n\n    componentDidMount() {\n        Mixpanel.track('landing_visit');\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"home_header\">\n                    <div className=\"heading\">\n                        <h1>\n                            Hack Yourself\n                        </h1>\n                        <h2>Double your productivity using half of your time</h2>\n                        {(User.isLoggedIn() ? <NavLink to=\"/board\">Check my Goals</NavLink> :\n                            <NavLink to=\"/register\">Get Started</NavLink>)}\n                    </div>\n                </div>\n                <div className=\"character_parent\">\n                    <div className=\"character\">\n                        <img src=\"/images/character.png\" alt=\"\"/>\n                    </div>\n                </div>\n\n                <div className=\"pusher\">\n                    <div className=\"ui vertical stripe segment\">\n                        <div className=\"ui middle aligned stackable grid container\">\n                            <div className=\"row\">\n                                <div className=\"sixteen wide column\">\n                                    <h3 className=\"ui center aligned header text-hackachieve-dark-purple \">\n                                        TAKE ABSOLUTE CONTROL OF YOUR LIFE</h3>\n                                    <p className=\"text-grey\">\n\n                                        Are you tired of procrastinating your future and not having any clue of where\n                                        are you going to in your life?\n                                        <br/>\n                                        Hackachieve helps you connecting the dots by setting a productivity framework\n                                        for you! You'll be able to set both <strong>long term</strong> and <strong>short\n                                        term</strong> goals, prioritize by impact and categorize everything into an\n                                        organized environment!\n                                        <br/><br/>\n                                        What are you waiting for? <br/><br/> <NavLink to=\"/register\">Create your free\n                                        account</NavLink> right now and enjoy our exclusive methodology!</p>\n                                </div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"eight wide column mar-top-60 head-left\">\n                                    <div className=\"b-img\">\n                                        <i className=\"far fa-star landing-icon\"></i></div>\n                                    <h3 className=\"ui aligned header text-hackachieve-dark-purple \"> PRIORITIZE WHAT\n                                        MATTERS</h3>\n                                    <p className=\"text-grey\">\n\n                                        Its very common to lose yourself trying to plan a pathway to a particular long\n                                        term goal. Prioritizing helps you to define what's more important to the present\n                                        moment in your life, so you can accomplish your short term goals one step at a\n                                        time.</p>\n                                </div>\n                            </div>\n\n                            <div className=\"row row-reverse\">\n                                <div className=\"eight wide column mar-top-60 head-right\">\n                                    <div className=\"b-img\">\n                                        <i className=\"fas fa-columns landing-icon\"></i>\n                                    </div>\n                                    <h3 className=\"ui aligned header text-hackachieve-dark-purple \"> ORGANIZE\n                                        YOURSELF</h3>\n                                    <p className=\"text-grey\">\n\n                                        In almost every productivity app you end up getting lost after some time, since\n                                        there's a ton of things to do without any contextual organization.\n\n                                        <br/>\n                                        In Hackachieve, we split your long term goals in different categories (health,\n                                        finances, etc) and each one of them will have its related cards. You can also\n                                        filter out categories from your board view\n                                    </p>\n                                </div>\n\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {};\n};\n\nexport default connect(mapStateToProps, {\n    //actions here\n})(Landing);\n\n","/* Authentication =========================================== */\n\nimport axios from \"axios\";\nimport * as qs from \"qs\";\nimport {LOGIN_USER, LOGOUT_USER, REGISTER_USER, SHOW_ALERT, USER_INFO_REFRESH} from \"./types\";\nimport history from '../history';\nimport API from '../classes/API';\nimport {Mixpanel as mixpanel} from '../mixpanel';\n\nexport const userLogin = (credentials) => async (dispatch) => {\n\n\n    try {\n        //here we use guest_axios because we have no token on headers to pass (obviously, because we're TRYING to log in!)\n        const response = await axios.post(`/api/token/`, qs.stringify(credentials), {\n            baseURL: API.getConfig().url,\n            withCredentials: true,\n            headers: {\n                \"Authorization\": \"Basic Og==\",\n                \"Content-type\": \"application/x-www-form-urlencoded\",\n                \"cache-control\": \"no-cache\",\n            }\n        });\n\n\n        mixpanel.track('user_logged_in');\n\n        //show success message\n        dispatch({\n            type: SHOW_ALERT, payload: {\n                type: 'positive',\n                title: 'Welcome back!',\n                content: \"You've logged in successfully!\"\n            }\n        });\n\n\n        setTimeout(() => {\n\n\n            //update our store with user credentials\n            dispatch({type: LOGIN_USER, payload: response.data});\n\n            const {access, refresh} = response.data;\n\n            //also update our localStorage\n\n            localStorage.setItem('userToken', JSON.stringify({\n                'access': access,\n                'refresh': refresh\n            }));\n\n            //then move the user to the board\n\n            history.push('/board');\n\n\n        }, 3000);\n\n\n    }\n    catch (error) {\n\n        mixpanel.track('user_login_error');\n\n        dispatch({\n            type: SHOW_ALERT, payload: {\n                type: 'negative',\n                title: 'Failed to login!',\n                content: 'Please, double check your e-mail and password.'\n            }\n        });\n\n        console.log('Failed to login!');\n        console.error(error);\n\n    }\n\n};\n\n\nexport const userLogout = () => dispatch => {\n\n    //clear localstorage\n    localStorage.clear();\n\n    mixpanel.track('user_logout');\n\n    dispatch({type: LOGOUT_USER}); //then we'll also clear our state\n    history.push('/')\n};\n\n\nexport const checkLoggedIn = () => async (dispatch) => {\n\n    // This action checks if the user has already logged in the past by verifying if there's some cache token information\n\n    const token = JSON.parse(localStorage.getItem('userToken'));\n\n    try {\n        if (token.access) {\n            const {access, refresh} = token;\n\n\n            //if some token cache was found on localStorage, let's login the user!\n            dispatch({\n                type: LOGIN_USER, payload: {\n                    access,\n                    refresh\n                }\n            })\n        }\n    }\n    catch (error) {\n        //do nothing on error! It simply means that there's no cache information!\n    }\n\n\n};\n\n\nexport const userRegister = (userInfo) => async (dispatch) => {\n\n    // const response = await guest_axios.post('/user/register', userInfo);\n    return API.request('/user/register', 'POST', userInfo, 'guest').then((response) => {\n\n        if (response.data.status === 'success') {\n\n\n            mixpanel.track('user_registered'); //user successfully registered goal\n\n            dispatch({\n                type: SHOW_ALERT, payload: {\n                    type: 'positive',\n                    title: 'User created successfully!',\n                    content: 'Are you ready to hack your productivity?'\n                }\n            });\n\n            //setup mixpanel user identify\n\n            console.log('registering user in mixpanel');\n\n            console.log(userInfo);\n\n            mixpanel.identify(userInfo.email);\n\n            mixpanel.people.set({\n                \"$email\": mixpanel.email,    // only special properties need the $\n                \"$created\": new Date(),\n                \"$last_login\": new Date(),         // properties can be dates...\n                \"$first_name\": userInfo.firstName,\n                \"$last_name\": userInfo.lastName,\n            });\n\n\n            localStorage.setItem('userInfo', JSON.stringify({\n                'firstName': userInfo.firstName,\n                'lastName': userInfo.lastName,\n                'email': userInfo.email\n            }));\n\n            dispatch({type: REGISTER_USER, payload: userInfo}); //register user\n\n\n        } else {\n\n            dispatch({\n                type: SHOW_ALERT, payload: {\n                    type: 'negative',\n                    title: 'Failed to Register your user',\n                    content: response.data.message\n                }\n            })\n        }\n\n    })\n\n};\n\n\nexport const userInfoRefresh = () => async (dispatch) => {\n\n\n    return API.request('/user/info/', 'GET', null, 'auth').then((response) => {\n\n        dispatch({type: USER_INFO_REFRESH, payload: response.data})\n\n    });\n\n};\n\n\n","/* UI =========================================== */\nexport const SHOW_ALERT = 'SHOW_ALERT';\nexport const CLEAR_ALERT = 'CLEAR_ALERT';\nexport const UPDATE_LOCATION = 'UPDATE_LOCATION';\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\nexport const LOAD_CATEGORIES = 'LOAD_CATEGORIES';\nexport const CHANGE_BOARD_SHOW_GOAL = 'CHANGE_BOARD_SHOW_GOAL';\n\n/* Authentication =========================================== */\n\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const USER_INFO_REFRESH = 'USER_INFO_REFRESH';\n\n\n/* Goals =========================================== */\nexport const LOAD_GOALS = 'LOAD_GOALS';\nexport const FILTER_GOALS = 'FILTER_GOALS';\n\n/* Checklist =========================================== */\nexport const SET_CHECKLIST_ITEM = 'SET_CHECKLIST_ITEM';\nexport const FETCH_ITEMS = 'FETCH_ITEMS';\nexport const UPDATE_CHECKLIST_ITEM = 'UPDATE_CHECKLIST_ITEM';\nexport const CHANGE_ITEM_STATUS = 'CHANGE_ITEM_STATUS';\nexport const DELETE_CHECKLIST_ITEM = 'DELETE_CHECKLIST_ITEM';\n","import API from \"../classes/API\";\nimport {LOAD_CATEGORIES, LOAD_GOALS, SHOW_ALERT, FILTER_GOALS} from \"./types\";\nimport {Mixpanel as mixpanel} from \"../mixpanel\";\n\n\nexport const loadGoals = (id, status) => async (dispatch, getState) => {\n\n    /*\n    load both short term and long term goals from a specific goal status\n    if id = 0 it will load all goals from a specific user\n     status available are:\n\n    - all (all status below)\n    - standby\n    - ongoing\n    - completed\n    */\n    return API.request(`/boards/show/${id}/${status}`, 'GET', null, 'auth').then((response) => {\n        dispatch({type: LOAD_GOALS, payload: response.data})\n    });\n};\n\n\nexport const deleteGoal = (id) => async (dispatch) => {\n\n    mixpanel.track('short_term_goal_delete');\n\n    // await auth_axios.delete(`/goals/delete/${id}`); //send request to server\n    return API.request(`/goals/delete/${id}/`, 'DELETE', null, 'auth')\n};\n\nexport const deleteLongTermGoal = (id) => async (dispatch) => {\n\n\n    mixpanel.track('long_term_goal_delete');\n\n    // await auth_axios.delete(`/goals/delete/${id}`); //send request to server\n    return API.request(`/columns/delete/${id}/`, 'DELETE', null, 'auth')\n};\n\nexport const loadUserGoalsCategories = () => async (dispatch) => {\n\n    return API.request(`/boards/`, 'GET', null, 'auth').then((response) => {\n\n        dispatch({type: LOAD_CATEGORIES, payload: response.data})\n\n    });\n\n};\n\nexport const goalChangeStatus = (goalId, status) => async (dispatch) => {\n\n\n    mixpanel.track('goal_change_status');\n\n\n    return API.request(`/goals/update-status/${goalId}/${status}`, 'PATCH', null, 'auth').then((response) => {\n\n        console.log(response);\n\n    });\n\n\n};\n\nexport const goalSetPriority = (goalId, newPriority) => async (dispatch) => {\n\n\n    mixpanel.track('goal_set_priority');\n\n    return API.request(`/goals/update-priority/${goalId}/${newPriority}`, 'PATCH', null, 'auth').then((response) => {\n\n        console.log(response);\n\n    });\n\n\n};\n\n\nexport const createGoal = (data) => async (dispatch) => {\n\n\n    return API.request('/goals/create/', 'POST', data, 'auth').then((response) => {\n\n        const {status, message} = response.data;\n\n        if (status === 'success') {\n            mixpanel.track('short_goal_create');\n        } else {\n            mixpanel.track('short_goal_create_error');\n        }\n\n        dispatch({\n            type: SHOW_ALERT, payload: {\n                type: (status === 'success' ? 'positive' : 'negative'),\n                title: (status === 'success' ? 'Your goal was created!' : 'Oops!'),\n                content: message\n            }\n        });\n\n        return response;\n    });\n\n};\n\nexport const createLongTermGoal = (data) => async (dispatch) => {\n\n    console.log('Action: createLongTermGoal');\n\n    return API.request('/columns/create/', 'POST', data, 'auth').then((response) => {\n\n        const {status, message} = response.data;\n\n        if (status === 'success') {\n            mixpanel.track('long_goal_create');\n        } else {\n            mixpanel.track('long_goal_create_error');\n        }\n\n\n        dispatch({\n            type: SHOW_ALERT, payload: {\n                type: (status === 'success' ? 'positive' : 'negative'),\n                title: (status === 'success' ? 'Your long term goal was created!' : 'Oops!'),\n                content: message\n            }\n        });\n\n        return response;\n    });\n\n};\n\nexport const filterGoals = (category) => (dispatch) => {\n\n    dispatch({\n        type: FILTER_GOALS, payload: {category}\n    });\n\n\n};\n\nexport const editGoals = (goal) => (dispatch) => {\n    return API.request(`/goals/update/${goal.goal_id}/`, 'PUT', goal.goal_data, 'auth').then((response) => {\n\n        const {status, message} = response.data;\n\n        if (status === 'success') {\n            mixpanel.track('short_goal_edit');\n        } else {\n            mixpanel.track('short_goal_edit_error');\n        }\n\n\n        dispatch({\n            type: SHOW_ALERT, payload: {\n                type: (status === 'success' ? 'positive' : 'negative'),\n                title: (status === 'success' ? 'Your short term goal was modified!' : 'Oops!'),\n                content: message\n            }\n        });\n\n        return response;\n    });\n};\n\nexport const editColumns = (column) => (dispatch) => {\n    return API.request(`/columns/update/${column.column_id}/`, 'PUT', column.column_data, 'auth').then((response) => {\n\n        const {status, message} = response.data;\n\n\n        if (status === 'success') {\n            mixpanel.track('long_goal_edit');\n        } else {\n            mixpanel.track('long_goal_edit_error');\n        }\n\n\n        dispatch({\n            type: SHOW_ALERT, payload: {\n                type: (status === 'success' ? 'positive' : 'negative'),\n                title: (status === 'success' ? 'Your long term goal was modified!' : 'Oops!'),\n                content: message\n            }\n        });\n\n\n        return response;\n    });\n};\n","import {CLEAR_ALERT, CLOSE_MODAL, OPEN_MODAL, SHOW_ALERT, UPDATE_LOCATION} from \"./types\";\n\n/* Messages =========================================== */\n\nexport const clearAlert = () => dispatch => {\n    dispatch({type: CLEAR_ALERT})\n};\n\n\nexport const showAlert = (type, message, content) => dispatch => {\n    dispatch({\n        type: SHOW_ALERT, payload: {\n            type,\n            message,\n            content\n        }\n    })\n};\n\n\n\nexport const updateLocation = (location) => async (dispatch) => {\n\n    dispatch({type: UPDATE_LOCATION, payload: location})\n};\n\nexport const toggleModal = (name, id = null) => (dispatch, getState)=> {\n\n    if(getState().ui.modals[name].status === false) { //if current modal is closed, lets open it\n        dispatch({type: OPEN_MODAL, payload: {name, id}})\n    } else {\n        dispatch({type: CLOSE_MODAL, payload: {name,id}}) //if its closed, lets open\n    }\n};\n\n\n\n","import {CHANGE_BOARD_SHOW_GOAL} from \"./types\";\nimport {Mixpanel as mixpanel} from '../mixpanel';\n\n\nexport const changeBoardShowGoal = (type) => dispatch => {\n\n    mixpanel.track('board_switch_show_goal');\n\n    return new Promise((resolve) => {\n\n        resolve(dispatch({type: CHANGE_BOARD_SHOW_GOAL, payload: type}));\n    });\n\n\n};\n\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\n\n// import {Link, NavLink} from \"react-router-dom\";\nimport {userLogout} from \"../../../../actions/authActions\";\n// import history from './../../../../history';\n\nclass UserMenu extends Component{\n    render(){\n        return(\n                <div className=\"ui card hackachieve-user-menu\">\n                    { this.props.isLoggedIn &&\n                            <div className=\"content\" onClick={()=> this.props.userLogout()}>\n                                <p>Logout</p>\n                            </div>\n                    }\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoggedIn: state.auth.isLoggedIn,\n    };\n};\n\nexport default connect(mapStateToProps, {\n    //actions here\n    userLogout,\n})(UserMenu);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\n\nimport {Link, NavLink} from \"react-router-dom\";\nimport {userInfoRefresh, userLogout} from \"../../../../actions/authActions\";\nimport {loadUserGoalsCategories, filterGoals} from \"../../../../actions/goalsActions\";\nimport history from './../../../../history';\nimport {showAlert, updateLocation} from \"../../../../actions/uiActions\";\nimport {changeBoardShowGoal} from \"../../../../actions/boardActions\";\nimport {loadGoals} from \"../../../../actions/goalsActions\";\n\nimport UserMenu from \"./UserMenu\"\n\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userMenuOpen: false\n        }\n    }\n\n    componentDidMount() {\n        console.log('refreshing user info');\n        this.props.userInfoRefresh();\n\n    }\n\n    componentWillMount() {\n        this.props.loadUserGoalsCategories();\n        this.props.updateLocation(history.location); //update for the first time on component mounting\n\n        //listen for history changes and then update our current state properly\n        this.unlisten = history.listen((location, action) => {\n\n            //check for messages to display\n            if (location.state !== undefined) {\n                if (location.state.alert !== undefined) { //if there's an alert message coming from out history.push\n                    this.props.showAlert('negative', 'Error', location.state.alert);\n                }\n            }\n\n            //update current location (pathname) ==> useful for header dynamic change\n            this.props.updateLocation(location);\n        });\n    }\n\n    componentWillUnmount() {\n        this.unlisten();\n    }\n\n\n    onHandleBoardSwitchItem(type) {\n\n        if (type === this.props.boardShowGoals) {\n            return 'board-switch-item switch-active';\n        } else {\n\n            return 'board-switch-item';\n        }\n    }\n\n    onBoardSwitch(type) {\n\n        this.props.changeBoardShowGoal(type).then(() => {\n            this.props.loadGoals(0, this.props.boardShowGoals)\n        });\n\n    }\n\n    onOpenMenuClick() {\n        this.setState({\n            userMenuOpen: !this.state.userMenuOpen\n        })\n\n        console.log(this.state.userMenuOpen);\n\n    }\n\n    handleFilter = (e) => {\n        this.props.filterGoals(e.target.value);\n    }\n\n    render() {\n        let {boardCategories} = this.props\n        switch (this.props.location.pathname) {\n\n            case '/board':\n\n                return (<React.Fragment>\n                    <header className=\"board-header\">\n                        <div className=\"board-header-bar\"><NavLink to='/' aria-current=\"page\"\n                                                                   className=\"board-header-logo active\"><i\n                            className=\"fas fa-ellipsis-v mobile-menu\"/></NavLink>\n                            <div className=\"board-selector\">\n                                <div className=\"board-selector-title\">Main Goals</div>\n                                <div className=\"hackachieve-dropdown-wrapper\">\n                                    <select name=\"goalFilter\" id=\"board-dropdown\" className=\"hackachieve-dropdown\"\n                                            onChange={this.handleFilter}>\n                                        <option value=\"All\">All</option>\n                                        <option value=\"week\" key=\"week\">Week</option>\n                                        {boardCategories && boardCategories.map((goalCategory, index) => {\n                                            return <option value={goalCategory.name}\n                                                           key={index}>{goalCategory.name}</option>\n                                        })}\n\n                                    </select>\n                                    <i className=\"dropdown-arrow fas fa-angle-down\"></i>\n                                </div>\n                            </div>\n                            <div className=\"board-switch\">\n                                <div className={this.onHandleBoardSwitchItem('all')}\n                                     onClick={() => this.onBoardSwitch('all')}\n                                >\n                                    <div className=\"board-switch-icon\"></div>\n                                    <div className=\"board-switch-text\">ALL</div>\n                                </div>\n                                <div className={this.onHandleBoardSwitchItem('standby')}\n                                     onClick={() => this.onBoardSwitch('standby')}>\n                                    <div className=\"board-switch-icon\"></div>\n                                    <div className=\"board-switch-text\">PENDING</div>\n                                </div>\n                                <div className={this.onHandleBoardSwitchItem('ongoing')}\n                                     onClick={() => this.onBoardSwitch('ongoing')}>\n                                    <div className=\"board-switch-icon\"></div>\n                                    <div className=\"board-switch-text\">ON GOING</div>\n                                </div>\n                                <div className={this.onHandleBoardSwitchItem('completed')}\n                                     onClick={() => this.onBoardSwitch('completed')}>\n                                    <div className=\"board-switch-icon\"></div>\n                                    <div className=\"board-switch-text\">COMPLETED</div>\n                                </div>\n                            </div>\n                            <div className=\"board-profile\" onClick={() => this.onOpenMenuClick()}>\n                                <div className=\"board-profile-username\">{this.props.userInfo.firstName}</div>\n                                <div className=\"board-profile-user-picture\"><img src=\"./images/icons/avatar-generic.svg\"\n                                                                                 alt=\"user\"/>\n                                    {this.state.userMenuOpen && <UserMenu/>}\n\n                                </div>\n                            </div>\n                        </div>\n                    </header>\n                </React.Fragment>);\n\n            default:\n\n                return (\n                    <React.Fragment>\n\n                        <div className=\"header_menu\">\n                            <div className=\"ui container\">\n                                <div className=\"ui large secondary inverted pointing menu\">\n                                    <a href=\" #\" className=\"mobile-menu\" onClick={() => this.onOpenMenuClick()}>\n                                        <i className=\"sidebar icon\"/>\n                                    </a>\n                                    <Link to={`/`} className=\"logo-link\">\n                                        <img src=\"/images/logo_dark.png\" alt=\"Logo\" className=\"app-logo\"/>\n                                    </Link>\n\n                                    <div className=\"right-items\">\n                                        <div className=\"button-main\">\n\n                                            {(this.props.isLoggedIn ?\n                                                <Link className=\"ui inverted button\" to=\"/board\">Board</Link> : null)}\n\n                                            {(!this.props.isLoggedIn ?\n                                                <React.Fragment>\n                                                    <Link id=\"btnLogin\" to=\"/login\" className=\"ui inverted button\">\n                                                        Log in\n                                                    </Link>\n                                                    <Link id=\"btnsignup\" to=\"/register\"\n                                                          className=\"ui inverted button\">Sign\n                                                        Up</Link>\n                                                </React.Fragment> :\n                                                <button id=\"btnLogout\" onClick={() => this.props.userLogout()}\n                                                        className=\"ui inverted button\">Logout</button>)}\n\n                                        </div>\n\n\n                                        <div className=\"navigation\" id=\"mySidenav\"\n                                             style={(this.state.userMenuOpen ? {'width': '100%'} : null)}>\n                                            <a href=\"# \" className=\"closebtn\"\n                                               onClick={() => this.onOpenMenuClick()}>&times;</a>\n                                            <ul className=\"nav-sub-menu\">\n                                                <li><Link className=\"active\" to='/'>Home</Link></li>\n                                                <li><Link to='/terms'>Terms</Link></li>\n                                                <li><Link to=\"/privacy\">Privacy</Link></li>\n\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </React.Fragment>\n                )\n\n\n        }\n\n\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n\n    const {boardShowGoals, location, boardCategories} = state.ui;\n\n    return {\n        userInfo: state.auth.user,\n        isLoggedIn: state.auth.isLoggedIn,\n        location: location,\n        boardShowGoals: boardShowGoals,\n        boardCategories\n    };\n};\n\nexport default connect(mapStateToProps, {\n    //actions here\n    userLogout,\n    updateLocation,\n    showAlert,\n    changeBoardShowGoal,\n    loadGoals,\n    loadUserGoalsCategories,\n    filterGoals,\n    userInfoRefresh\n})(Header);\n\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {clearAlert} from \"../../../actions/uiActions\";\n\nclass Alert extends Component {\n\n    componentDidMount() {\n        //set time out to auto clear message\n\n        window.setTimeout(() => {\n            this.props.clearAlert();\n        }, 6000);\n\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className={`ui ${this.props.alert.type} message`}>\n                    <i className=\"close icon\"></i>\n                    <div className=\"header\">\n                        {this.props.alert.title}\n                    </div>\n                    {this.props.alert.content}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {alert: state.alert.message};\n};\n\nexport default connect(mapStateToProps, {\n    clearAlert\n})(Alert);\n\n","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\nimport {userLogin} from \"../../../../actions/authActions\";\nimport Alert from \"../../../UI/Alert/Alert\";\nimport {Mixpanel as mixpanel} from \"../../../../mixpanel\";\n\nclass Login extends Component {\n\n    componentDidMount() {\n        mixpanel.track('login_visit')\n    }\n\n    renderInput({placeholder, input, label, meta, type}) {\n\n\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <input {...input} placeholder={placeholder} type={type}/>\n            </div>\n        )\n    }\n\n    onSubmit = (formValues) => {\n        this.props.userLogin(formValues); //login our user with credentials\n    };\n\n    onRenderAlert() {\n        return (this.props.alert.type ? <Alert type={this.props.alert.type} title={this.props.alert.title}\n                                               content={this.props.alert.content}/> : null)\n    }\n\n\n    render() {\n\n        return (\n            <main>\n\n                <div className=\"ui text container\">\n\n                    <h1>Login</h1>\n\n                    <div className=\"ui divider\"></div>\n\n                    {this.onRenderAlert()}\n\n                    <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n\n                        <Field name=\"email\" type=\"email\" placeholder=\"E-mail\" component={this.renderInput}\n                               label=\"Email\"/>\n                        <Field name=\"password\" type=\"password\" placeholder=\"Password\" component={this.renderInput}\n                               label=\"Your password\"/>\n\n                        <button className=\"ui button\" type=\"submit\">Login</button>\n\n                    </form>\n\n\n                </div>\n\n\n            </main>\n\n\n        );\n    }\n}\n\nconst formWrapped = reduxForm({\n    form: 'Login',\n})(Login);\n\n\nconst mapStateToProps = (state) => {\n    return {alert: state.alert.message};\n};\n\nexport default connect(mapStateToProps, {\n    userLogin\n})(formWrapped)\n","import React from 'react';\n\n\nconst ValidationMessage = (props) => {\n    return (\n        <React.Fragment>\n            <div className=\"ui red message\">{props.message}</div>\n        </React.Fragment>\n    )\n};\n\nexport default ValidationMessage;","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\nimport Alert from \"../../../UI/Alert/Alert\";\nimport {userLogin, userRegister} from \"../../../../actions/authActions\";\nimport ValidationMessage from '../../../UI/ValidationMessage/ValidationMessage';\nimport {Mixpanel as mixpanel} from \"../../../../mixpanel\";\nimport {Link} from \"react-router-dom\";\n\nclass Register extends Component {\n\n    componentDidMount() {\n        mixpanel.track('register_visit')\n    }\n\n\n    onSubmit = (formValues) => {\n\n        // check if user agreed with terms of use\n\n\n        if (!formValues.agreeTermsOfUse) {\n            alert('Sorry, you must agree with our terms of use to create an account');\n            return false;\n        }\n\n\n        console.log(formValues);\n\n        this.props.userRegister(formValues).then(() => { //first register it\n\n\n            if (this.props.canRedirectLogin) { //if everything is ok, this variable will be changed to true\n\n                setTimeout(() => {\n                    this.props.userLogin({ //login user with same information!\n                        email: formValues.email,\n                        password: formValues.password\n                    });\n\n                }, 3000);\n            }\n        });\n\n    };\n\n\n    onRenderAlert() {\n        return (this.props.alert.type ? <Alert type={this.props.alert.type} title={this.props.alert.title}\n                                               content={this.props.alert.content}/> : null)\n    }\n\n\n    renderInput({type, placeholder, input, label, meta}) {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <input {...input} placeholder={placeholder} type={type}/>\n                {(meta.touched && meta.error ? <ValidationMessage message={meta.error}/> : null)}\n            </div>\n        )\n    }\n\n    renderCheckbox({type, placeholder, input, label, meta, children}) {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <div className=\"ui checkbox\">\n                    <input {...input} type={type}/>\n                    <label>{children}</label>\n                </div>\n\n                {(meta.touched && meta.error ? <ValidationMessage message={meta.error}/> : null)}\n            </div>\n        )\n    }\n\n\n    render() {\n\n        return (\n\n\n            <main>\n\n                <div className=\"ui text container\">\n\n                    <h1>Create your Account</h1>\n\n                    <div className=\"ui divider\"></div>\n\n                    {this.onRenderAlert()}\n\n                    <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n\n                        <Field name=\"firstName\" component={this.renderInput} label=\"First name\"\n                               placeholder=\"First name\" type=\"text\" validate={required}/>\n\n                        <Field name=\"lastName\" component={this.renderInput} label=\"Last name\"\n                               placeholder=\"Last name\" type=\"text\" validate={required}/>\n\n                        <Field type=\"email\" name=\"email\" component={this.renderInput} label=\"Email\"\n                               placeholder=\"Email\" validate={required}/>\n\n                        <Field type=\"password\" name=\"password\" component={this.renderInput} label=\"Password\"\n                               placeholder=\"Password\" validate={required}/>\n\n                        <Field type=\"checkbox\" name=\"agreeTermsOfUse\" component={this.renderCheckbox}\n                               label=\"Terms of Use\"\n                               validate={required}>\n                            <Link to='/terms'>\n                                I agree with Hackachieve terms of use\n                            </Link>\n                        </Field>\n\n                        {/*<div className=\"field\">*/}\n                        {/*<div className=\"ui checkbox\">*/}\n                        {/*<input type=\"checkbox\" tabIndex=\"0\"/>*/}\n                        {/*<label>I agree to the Terms and Conditions</label>*/}\n                        {/*</div>*/}\n                        {/*</div>*/}\n                        <button className=\"ui button positive\" disabled={!this.props.valid} type=\"submit\">Register\n                        </button>\n                    </form>\n                </div>\n            </main>\n        );\n    }\n}\n\nconst required = v => {\n    if (!v || v === '') {\n        return \"This field is required\"\n    }\n    return undefined;\n};\n\n\nconst formWrapped = reduxForm({\n    form: 'Register',\n    enableReinitialize: true\n})(Register);\n\nconst mapStateToProps = (state) => {\n    return {\n        canRedirectLogin: state.auth.canRedirectLogin,\n        alert: state.alert.message,\n        initialValues: {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            agreeTermsOfUse: true\n        }\n    };\n};\n\n\nexport default connect(\n    mapStateToProps, {\n        //some actions here\n        userRegister,\n        userLogin\n    })(formWrapped)\n","import React from 'react';\n\n\nconst Loading = (props) => {\n    return (\n        <React.Fragment>\n            <div className=\"ui active dimmer\">\n                <div className=\"ui text loader\">Loading</div>\n            </div>\n        </React.Fragment>\n    )\n};\n\nexport default Loading;","import React, {Component} from 'react';\n\nclass Dropdown extends Component {\n\n    state = {\n        type: null,\n        status: 'closed'\n    };\n\n    componentDidMount() {\n        switch (this.props.type) {\n            case 'goal':\n                this.setState({type: this.props.type});\n                break;\n            default:\n                this.setState({type: this.props.type});\n                break;\n        }\n\n\n    }\n\n    onToggleDropdown() {\n        (this.state.status === 'opened' ? this.setState({status: 'closed'}) : this.setState({status: 'opened'}));\n    }\n\n    render() {\n\n        let uiDropdownClass, uiDropdownMenuClass, uiDropdownMenuStyle;\n\n        if (this.state.status === 'opened') {\n            uiDropdownClass = 'ui dropdown active visible column-dropdown';\n            uiDropdownMenuClass = 'menu transition visible hackachieve-dropdown';\n            uiDropdownMenuStyle = {\n                'display': 'block !important'\n            }\n        } else {\n            uiDropdownClass = 'ui dropdown column-dropdown';\n            uiDropdownMenuClass = 'menu';\n        }\n\n        return (\n            <React.Fragment>\n\n                <div className={uiDropdownClass} tabIndex=\"0\" onClick={(e) => {\n                    e.stopPropagation();\n                    this.onToggleDropdown();\n                }} style={{'opacity': '1 !important'}}>\n\n                    {this.props.children}\n\n                    <div className={uiDropdownMenuClass} tabIndex=\"-1\" style={uiDropdownMenuStyle}>\n                        <div className=\"item\"\n                            onClick={this.props.triggerParentEditModal}>\n                            <i className=\"edit outline icon\"></i>\n                            Edit {this.state.type}\n                        </div>\n                        <div className=\"item\"\n                             onClick={this.props.triggerParentOpenModal}>\n                                <i className=\"sticky note outline icon\"></i>\n                                New {this.state.type}\n                            </div>\n                        <div className=\"item\" onClick={this.props.triggerParentDelete}>\n                            <i className=\"trash icon\"></i>\n                            Delete {this.state.type}\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Dropdown;","import API from \"../classes/API\";\nimport {\n    SET_CHECKLIST_ITEM,\n    FETCH_ITEMS,\n    UPDATE_CHECKLIST_ITEM,\n    CHANGE_ITEM_STATUS,\n    DELETE_CHECKLIST_ITEM\n} from \"./types\";\nimport {Mixpanel as mixpanel} from \"../mixpanel\";\n\n\n\nexport const addItem = (item) => (dispatch) => {\n\n    mixpanel.track('checklist_add_item');\n\n    return API.request(`/checklists/`, 'POST', {checklist: {...item}}, 'auth').then((response) => {\n\n        dispatch({\n            type: SET_CHECKLIST_ITEM, payload: {\n                ...item\n            }\n        });\n        return response;\n    })\n};\n\nexport const fetchItem = (goalId) => (dispatch) => {\n    return API.request(`/checklists/${goalId}/`, 'GET', 'auth').then((response) => {\n        dispatch({\n            type: FETCH_ITEMS, payload: response.data\n        });\n        return response\n    });\n};\n\nexport const updateItem = (itemId, item) => (dispatch) => {\n\n\n    mixpanel.track('checklist_update_item');\n\n    return API.request(`/checklists/${itemId}/`, 'PUT', {checklist: {...item}}, 'auth').then((response) => {\n\n        dispatch({\n            type: UPDATE_CHECKLIST_ITEM, payload: {\n                ...item,\n                id: itemId\n            }\n        });\n        return response;\n    });\n};\nexport const changeStatus = (item) => (dispatch) => {\n\n\n    mixpanel.track('checklist_change_status_item');\n\n\n    return API.request(`/checklists/${item.id}/`, 'PUT', {\n        checklist: {\n            ...item,\n            status: !item.status\n        }\n    }, 'auth').then((response) => {\n\n        dispatch({\n            type: CHANGE_ITEM_STATUS, payload: {\n                ...item,\n            }\n        });\n        return response;\n    });\n}\nexport const deleteItem = (item) => (dispatch) => {\n\n\n    mixpanel.track('checklist_delete_item');\n\n    return API.request(`/checklists/${item.id}/`, 'DELETE', 'auth').then((response) => {\n\n        dispatch({\n            type: DELETE_CHECKLIST_ITEM, payload: {\n                ...item\n            }\n        });\n        return response;\n    });\n}\n\n","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\nimport {addItem, fetchItem, updateItem} from \"../../../actions/checkListAction\";\n\nclass CheckList extends Component {\n\n    componentWillMount() {\n        if (this.props.item) this.props.initialize({item: this.props.item.description})\n    }\n\n    renderInputTextArea({input, label, meta, optional, placeholder, meta: {touched, error, warning}}) {\n\n        return (\n            <div className=\"field\">\n                <textarea {...input} rows=\"3\" placeholder={placeholder}/>\n                {(optional ? <>\n                    <div className=\"ui pointing label\">\n                        Optional Field\n                    </div>\n                </> : null)}\n                {touched &&\n                ((error && <span>{error}</span>) ||\n                    (warning && <span>{warning}</span>))}\n            </div>\n        )\n    }\n\n\n    render() {\n        // const {id, description} = this.props.item || {};\n        const {id} = this.props.item || {};\n        const form = <React.Fragment>\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n                <Field\n                    name=\"item\"\n                    textarea={true}\n                    component={this.renderInputTextArea}\n                    placeholder=\"Add an item\"\n                    validate={[required]}\n                />\n                <button className=\"ui button positive\" type=\"submit\"> {id ? \"Save\" : \"Add\"}</button>\n            </form>\n        </React.Fragment>;\n        const button = <React.Fragment>\n        </React.Fragment>;\n        return (\n            <div>\n                {form}\n                {button}\n            </div>\n        );\n    }\n\n    onSubmit = (formValues) => {\n\n        // var {id, description} = this.props.item || {}\n        var {id} = this.props.item || {};\n        if (id) {\n            let checklist = {\n                description: formValues.item,\n                status: false,\n                goal_id: this.props.goal_id\n            };\n            this.props.updateItem(id, checklist).then(resp => {\n\n                this.props.hideForm();\n            })\n        } else {\n            let checklist = {\n                description: formValues.item,\n                status: false,\n                goal_id: this.props.goal_id\n            };\n\n\n            this.props.addItem(checklist).then(resp => {\n\n\n                this.props.fetchItem(this.props.modals.goalContent.id); //trigger a checklist refresh\n            })\n\n\n        }\n    };\n}\n\n\nconst formWrapped = reduxForm({\n    form: 'CheckList',\n\n})(CheckList);\nconst required = value => (value ? undefined : 'Item Description required');\n\nconst mapStateToProps = (state, ownProps) => {\n\n    return {\n        myProps: ownProps,\n        modals: state.ui.modals\n    };\n};\n\nexport default connect(mapStateToProps, {\n    //some actions here\n    addItem,\n    fetchItem,\n    updateItem\n})(formWrapped)\n\n","import React, {Component} from 'react';\nimport * as ReactDOM from \"react-dom\";\nimport {connect} from 'react-redux'\nimport {toggleModal} from \"../../../actions/uiActions\";\nimport Alert from \"../Alert/Alert\";\nimport CheckList from \"../../UI/forms/CheckList\";\nimport {fetchItem, changeStatus, deleteItem} from \"../../../actions/checkListAction\";\n\nclass Modal extends Component {\n    state = {\n        showChecklistForm: false,\n        //status: true,\n        editChecklist: ''\n    };\n\n    onClose() {\n        console.log('closing modal');\n        this.props.toggleModal(this.props.myProps.name); //close this modal\n    }\n\n    onRenderAlert() {\n        return (this.props.alert.type ? <Alert type={this.props.alert.type} title={this.props.alert.title}\n                                               content={this.props.alert.content}/> : null)\n    }\n\n    handleClick = () => {\n        this.setState({\n            showChecklistForm: !this.state.showChecklistForm,\n            editChecklist: ''\n        })\n    };\n\n    editChecklist(id = \"\") {\n        this.setState({\n            editChecklist: id ? id : \"\",\n            showChecklistForm: false\n        })\n    }\n\n    componentDidMount() {\n        this.props.fetchItem(this.props.modals.goalContent.id) //fetch checklist from specific goal ID\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n\n        //this checks if new items were added. If so, close the textarea\n        if (prevProps.items.length !== this.props.items.length) {\n            this.editChecklist();\n        }\n\n\n    }\n\n    changeStatus = (item) => {\n        this.props.changeStatus(item)\n    };\n    deleteItem = (item) => {\n        this.props.deleteItem(item)\n    };\n\n    hideForm = () => {\n        this.setState({\n            editChecklist: \"\"\n        })\n    };\n\n    render() {\n        return ReactDOM.createPortal(\n            <div className=\"ui dimmer modals visible active\" onClick={(e) => {\n                e.stopPropagation();\n                this.onClose();\n            }}>\n                <div className=\"ui standard modal visible active\" onClick={(e) => e.stopPropagation()}>\n                    <i className=\"close icon\" onClick={(e) => this.onClose()}></i>\n                    <div className=\"header\">{this.props.myProps.title}</div>\n\n                    <div className=\"content\">\n                        {this.onRenderAlert()}\n\n                        {this.props.myProps.content}\n                        {this.props.name === \"goalContent\" &&\n\n\n                        <div className=\"checklist\">\n\n                            <h4>Checklist</h4>\n\n\n                            {(this.props.items.length === 0 ?\n\n                                <p className=\"checklist-warning\">Click on \"Add\" to create your checklist</p> : null)}\n\n                            {\n                                // eslint-disable-next-line\n                                this.props.items && this.props.items.map((item) => {\n\n                                    if (item.id) {\n                                        return (<div className=\"checklist-item\" key={item.id}>\n                                            <div className=\"ui checkbox\">\n                                                <input type=\"checkbox\" name=\"example\"\n                                                       onClick={() => this.changeStatus(item)}\n                                                       defaultChecked={item.status}/>\n                                                {this.state.editChecklist === item.id ? <>\n                                                    <CheckList\n                                                        goal_id={this.props.modals.goalContent.id}\n                                                        item={item}\n                                                        hideForm={this.hideForm}/>\n\n\n                                                    <i className=\"edit icon\"\n                                                       onClick={() => this.editChecklist()}> </i> </> : <>\n                                                    <label style={item.status ? {textDecoration: \"line-through\"} : {}}\n                                                           onClick={() => this.editChecklist(item.id)}>{item.description}</label>\n\n                                                    <i className=\"close icon\"\n                                                       onClick={() => this.deleteItem(item)}> </i> </>\n                                                }\n                                            </div>\n                                        </div>)\n                                    }\n\n\n                                }\n                            )\n                            }\n\n\n                            {/*<div className=\"ui list\">*/}\n                            {/*    {this.props.items && this.props.items.map((item) => */}\n                            {/*        <div className=\"item\" key={item.id}>*/}\n                            {/*            <div className=\"ui checkbox\">  */}\n                            {/*                <input type=\"checkbox\" name=\"example\" onClick={() => this.changeStatus(item)} defaultChecked={item.status}/>*/}\n                            {/*                {this.state.editChecklist === item.id ? <>*/}\n                            {/*                <CheckList goal_id={this.props.modals.goalContent.id} item={item} hideForm={this.hideForm}/>*/}\n                            {/*                <button className=\"ui button\" onClick={() => this.editChecklist()}>X</button> </> : <>*/}\n                            {/*                <label style={item.status ? {textDecoration: \"line-through\"} : {}} onClick={() => this.editChecklist(item.id)}>{item.description}</label>*/}\n                            {/*                <button className=\"ui button\" onClick={() => this.deleteItem(item)}>X</button> </>*/}\n                            {/*                }*/}\n                            {/*            </div> */}\n                            {/*        </div>*/}\n                            {/*    )*/}\n                            {/*    }*/}\n                            {/*</div>*/}\n\n                            <div className=\"checklist-action-area\">\n\n\n                                {!this.state.showChecklistForm &&\n                                <button className=\"ui button positive add\" onClick={this.handleClick}>Add an\n                                    item</button>\n                                }\n                                {this.state.showChecklistForm && <div>\n                                    <CheckList goal_id={this.props.modals.goalContent.id}/>\n                                    <button className=\"ui button negative cancel\" onClick={this.handleClick}>Cancel\n                                    </button>\n                                </div>}\n\n                            </div>\n\n                        </div>\n                        }\n                    </div>\n                    <div className=\"actions\">\n                        {this.props.myProps.actions}\n                    </div>\n                </div>\n            </div>, document.querySelector('#modal'))\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\n\n    return {\n        myProps: ownProps,\n        alert: state.alert.message,\n        modals: state.ui.modals,\n        items: state.checklist.items,\n        checklist: state.checklist\n    };\n};\n\nexport default connect(mapStateToProps, {\n    //actions here\n    toggleModal,\n    fetchItem,\n    changeStatus,\n    deleteItem\n})(Modal);\n\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport Modal from \"../../../UI/Modal/Modal\";\nimport {toggleModal} from \"../../../../actions/uiActions\";\nimport Moment from \"react-moment\";\n\n\nclass GoalContentModal extends Component {\n\n    onClose() {\n        this.props.toggleModal('goalContent', this.props.myProps.shortTermGoal.id);\n    }\n\n    onEdit() {\n        this.props.toggleModal('goalContent', this.props.myProps.shortTermGoal.id);\n        this.props.toggleModal('editShortTermGoal', this.props.myProps.shortTermGoal.id);\n    }\n\n    onRenderStatus(status) {\n        switch (status) {\n            case 1:\n                return 'Pending';\n            case 2:\n                return 'On going...';\n            case 3:\n                return 'Done';\n            default:\n                return null\n        }\n    }\n\n    render() {\n\n        const {title, description, deadline, status} = this.props.myProps.shortTermGoal;\n\n        const content = <React.Fragment>\n            <p><strong>Deadline: </strong><Moment format=\"D MMMM, YYYY\">{deadline}</Moment></p>\n            <p className=\"modal-description\"><strong>Description: </strong>{description}</p>\n            <p><strong>Status: </strong>{this.onRenderStatus(status)}</p>\n        </React.Fragment>;\n\n\n        const actions = <React.Fragment>\n            <button className=\"ui button positive\" onClick={() => this.onEdit()}>Edit</button>\n            <button className=\"ui button negative\" onClick={() => this.onClose()}>Cancel</button>\n        </React.Fragment>;\n\n        return (\n            <Modal\n                name=\"goalContent\"\n                title={title}\n                content={content}\n                actions={actions}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {myProps: ownProps};\n};\n\nexport default connect(mapStateToProps, {\n    //actions here\n    toggleModal\n})(GoalContentModal);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport default class renderDatePicker extends React.Component {\n    static propTypes = {\n        input: PropTypes.shape({\n            onChange: PropTypes.func,\n            value: PropTypes.string,\n        }).isRequired,\n        meta: PropTypes.shape({\n            touched: PropTypes.bool,\n            error: PropTypes.string,\n        }).isRequired,\n        inputValueFormat: PropTypes.string,\n    };\n\n    static defaultProps = {\n        inputValueFormat: null,\n    };\n\n    state = {\n        selectedDate: null,\n    };\n\n    componentWillMount() {\n        if (this.props.input.value) {\n            this.setState({\n                selectedDate: new Date(this.props.currentDeadline),\n            });\n        }\n    }\n\n    handleChange = (date) => {\n        this.setState({\n            selectedDate: date,\n        });\n\n        this.props.input.onChange(date);\n    }\n\n    render() {\n        const {\n            meta: {touched, error},\n            label,\n            ...rest\n        } = this.props;\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <DatePicker\n                    {...rest}\n                    selected={this.state.selectedDate}\n                    onChange={this.handleChange}\n                />\n                {touched &&\n                error &&\n                <span className=\"datepicker__error\">\n            {error}\n          </span>}\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport moment from 'moment';\nimport {connect} from 'react-redux';\nimport Modal from \"../../../UI/Modal/Modal\";\nimport {toggleModal} from \"../../../../actions/uiActions\";\nimport {createGoal, loadGoals, editGoals} from \"../../../../actions/goalsActions\";\nimport DatePicker from '../../../UI/Datepicker';\n\nclass EditShortTermGoalModal extends Component {\n\n    onClose() {\n        this.props.toggleModal('editShortTermGoal');\n    }\n\n    renderInput({input, label, meta, optional, type, textarea, placeholder}) {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                {(textarea ? <textarea {...input} rows=\"3\" placeholder={placeholder}/> :\n                    <input {...input} type={type} placeholder={placeholder}/>)}\n                {(optional ? <>\n                    <div className=\"ui pointing label\">\n                        Optional Field\n                    </div>\n                </> : null)}\n\n\n            </div>\n        )\n    }\n\n    renderInputTextArea({input, label, meta, optional, placeholder, value}) {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <textarea {...input} rows=\"3\" placeholder={placeholder}/>\n                {(optional ? <>\n                    <div className=\"ui pointing label\">\n                        Optional Field\n                    </div>\n                </> : null)}\n            </div>\n        )\n    }\n\n    renderInputCheckbox({input, meta, optional, label, value}) {\n        return (\n            <div className=\"field\">\n                <div className=\"ui toggle checkbox\">\n                    <input {...input} type=\"checkbox\"/>\n                    <label>{label}</label>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        const title = 'Edit your short-term goal!';\n\n        const content = <React.Fragment>\n\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n                <Field name=\"title\" component={this.renderInput} label=\"Enter title\"\n                       placeholder=\"A summary about what's your goal about\" value={this.props.myProps.shortTermGoal.title}/>\n                <Field name=\"description\" textarea={true} component={this.renderInputTextArea} label=\"Enter description\"\n                       placeholder=\"Describe what you have to do in details, to accomplish it\"/>\n                <Field name=\"duration_hrs\" type=\"number\" optional={true} component={this.renderInput}\n                       label=\"Estimated duration (hrs)\"/>\n                <Field\n                        name=\"deadline\"\n                        label=\"Deadline\" \n                        inputValueFormat=\"YYYY-MM-DD\"\n                       // dateFormat=\"L\"\n                        dateFormatCalendar=\"dddd\"\n                        placeholderText=\"Select deadline\"\n                        fixedHeight\n                        showMonthDropdown\n                        showYearDropdown\n                        currentDeadline={this.props.myProps.shortTermGoal.deadline}\n                        minDate={new Date()}\n                        maxDate={new Date(this.props.deadline)}\n                        dropdownMode=\"select\"\n                        normalize={value => (value ? moment(value).format('YYYY-MM-DD') : null)}\n                        component={DatePicker}\n                        />\n                <Field name=\"priority\" component={this.renderInputCheckbox}\n                       label=\"Is this a priority goal?\"/>\n            </form>\n        </React.Fragment>;\n\n\n        const actions = <React.Fragment>\n            <button className=\"ui button positive\" onClick={this.props.handleSubmit(this.onSubmit)}>Update</button>\n            <button className=\"ui button negative\" onClick={() => this.onClose()}>Cancel</button>\n        </React.Fragment>;\n\n        return (\n            <Modal name='editShortTermGoal' title={title} content={content} actions={actions}/>\n        );\n    }\n\n\n    onSubmit = (formValues) => {\n        let formOutput = {\n            goal_id: this.props.myProps.shortTermGoal.id,\n            goal_data: {\n                ...formValues, \n                column_id: this.props.myProps.shortTermGoal.column_id,\n            }\n        };\n\n        this.props.editGoals(formOutput).then((response) => {\n\n            const {status} = response.data;\n\n            if (status === 'success') {\n\n                this.props.loadGoals(0, this.props.boardShowGoals); //refresh goals (to display new one)\n\n                setTimeout(() => {\n                    this.props.toggleModal('editShortTermGoal'); //close modal once goal is created\n                }, 2000)\n\n            }\n\n\n        });\n\n    };\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n\n    const {boardShowGoals, modals} = state.ui;\n\n    const deadline = ownProps.shortTermGoal.deadline.split('T')[0];\n\n\n    return {\n        myProps: ownProps,\n        modals: modals,\n        boardShowGoals: boardShowGoals,\n        initialValues: {\n            title: ownProps.shortTermGoal.title,\n            description: ownProps.shortTermGoal.description,\n            duration_hrs: ownProps.shortTermGoal.duration_hrs,\n            deadline: deadline,\n            priority: ownProps.shortTermGoal.priority\n        }\n    };\n};\n\nconst formWrapped = reduxForm({\n    form: 'EditShortTermGoalModal',\n    enableReinitialize: true\n})(EditShortTermGoalModal);\n\nexport default connect(mapStateToProps, {\n    //some actions here\n    toggleModal,\n    createGoal,\n    loadGoals,\n    editGoals\n})(formWrapped)\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport Moment from \"react-moment\";\nimport Dropdown from \"../../../UI/Dropdown/Dropdown\";\nimport {deleteGoal, goalChangeStatus, goalSetPriority, loadGoals} from \"../../../../actions/goalsActions\";\nimport {toggleModal} from \"../../../../actions/uiActions\";\nimport GoalContentModal from \"./GoalContentModal\";\nimport EditShortTermGoalModal from \"./EditShortTermGoalModal\"\n\nclass ShortTermGoal extends Component {\n\n    characterLimit = 50;\n\n    onGoalSetStatus(statusId) {\n\n        console.log('setting new goal status');\n\n        this.props.goalChangeStatus(this.props.myProps.shortTermGoal.id, statusId).then(() => {\n            this.props.loadGoals(0, this.props.boardShowGoals);\n        });\n\n    }\n\n    onGoalSetPriority() {\n\n        console.log('setting goal priority');\n\n        const {id, priority} = this.props.myProps.shortTermGoal;\n\n        if (!priority) {\n            this.props.goalSetPriority(id, 1).then(() => {\n                this.props.loadGoals(0, this.props.boardShowGoals);\n            })\n        } else {\n            this.props.goalSetPriority(id, 0).then(() => {\n                this.props.loadGoals(0, this.props.boardShowGoals);\n            });\n        }\n\n    }\n\n    onDeleteGoal(id) {\n        this.props.deleteGoal(id).then(() => {\n            this.props.loadGoals(0, this.props.boardShowGoals);\n        })\n    }\n\n    onEditGoal() {\n\n        this.props.toggleModal('editShortTermGoal', this.props.myProps.shortTermGoal.id);\n\n\n    }\n\n\n    onRenderActions() {\n        switch (this.props.myProps.shortTermGoal.status) {\n\n            case 1: //pending\n\n                return <div className=\"column-card-button\" onClick={(e) => {\n                    e.stopPropagation();\n                    this.onGoalSetStatus(2)\n                }}>\n                    START\n                </div>;\n\n\n            case 2: //on going\n\n                return <React.Fragment>\n                    <div className=\"repeat-icon\" onClick={(e) => {\n                        e.stopPropagation();\n                        this.onGoalSetStatus(1)\n                    }}></div>\n\n                    <div className=\"column-card-button column-card-active\" onClick={(e) => {\n                        e.stopPropagation();\n                        this.onGoalSetStatus(3)\n                    }}>\n                        COMPLETE\n                    </div>\n\n\n                    <div className=\"column-card-text-button\">\n                        ON GOING\n                    </div>\n                </React.Fragment>;\n\n\n            case 3: //done\n                return null;\n\n            default:\n                return null;\n\n        }\n    }\n\n    onOpenGoalContentModal() {\n\n        console.log('opening goal content modal');\n        this.props.toggleModal('goalContent', this.props.myProps.shortTermGoal.id);\n    }\n\n    onRenderPriority(priority) {\n\n        return (priority === false || priority === 0 ? 'priority-icon' : 'priority-icon priority-icon-active');\n    }\n\n\n    onRenderGoalContentModal() {\n\n        if (this.props.modals.goalContent.status) {\n\n            if (this.props.modals.goalContent.id === this.props.myProps.shortTermGoal.id) {\n                return <GoalContentModal shortTermGoal={this.props.myProps.shortTermGoal}\n                />\n            }\n        } else {\n            return null;\n        }\n    }\n\n    renderEditShortTermModal() {\n\n\n        if (this.props.modals.editShortTermGoal.status && this.props.modals.editShortTermGoal.id === this.props.myProps.shortTermGoal.id) {\n\n            return <EditShortTermGoalModal shortTermGoal={this.props.myProps.shortTermGoal} deadline={this.props.deadline}/>\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        let goalStyle, cardCategoryStyle;\n\n\n        const {id, description, deadline, title, priority, status} = this.props.myProps.shortTermGoal;\n\n\n        cardCategoryStyle = 'card-active-' + this.props.myProps.longTermBoardName;\n\n\n        switch (status) {\n\n            case 2: //on going\n                goalStyle = `column-card ${cardCategoryStyle}`;\n                break;\n\n            case 3://completed\n                goalStyle = `column-card column-card-completed`;\n                break;\n\n            default:\n                goalStyle = 'column-card';\n                break;\n        }\n\n        if (priority) {\n            goalStyle += ' column-card-priority';\n        }\n\n\n        return (\n            <div className={goalStyle} onClick={(e) => {\n                e.stopPropagation();\n                this.onOpenGoalContentModal()\n            }}>\n\n\n                <Dropdown\n                    triggerParentDelete={() => this.onDeleteGoal(id)}\n                    triggerParentOpenModal={this.props.myProps.onOpenModal}\n                    triggerParentEditModal={() => this.onEditGoal()}\n                />\n\n                <div className=\"column-card-body\">\n                    <div className=\"column-card-title\">{title}</div>\n                    {description.length <= this.characterLimit\n                        ? <div className=\"column-card-description\">{description}</div>\n                        : <div\n                            className=\"column-card-description\">{description.substring(0, this.characterLimit) + \" ...\"}</div>\n                    }\n                    <div className=\"column-card-deadline\">\n                        <div className=\"column-card-deadline-icon\"></div>\n                        <div className=\"column-card-deadline-text\">\n                            <Moment format=\"D MMMM, YY\">{deadline}</Moment>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"column-card-footer\">\n                    <div className={this.onRenderPriority(priority)} onClick={(e) => {\n                        e.stopPropagation();\n                        this.onGoalSetPriority()\n                    }}></div>\n                    <div className=\"column-footer-actions-group\">\n                        {this.onRenderActions()}\n                    </div>\n                </div>\n\n                {this.onRenderGoalContentModal()}\n                {this.renderEditShortTermModal()}\n\n            </div>\n\n\n        );\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n\n    const {modals, boardShowGoals} = state.ui;\n\n    return {\n        myProps: ownProps,\n        modals: modals,\n        boardShowGoals: boardShowGoals\n    }\n        ;\n};\n\nexport default connect(mapStateToProps, {\n    //actions here\n    deleteGoal,\n    loadGoals,\n    toggleModal,\n    goalChangeStatus,\n    goalSetPriority\n})(ShortTermGoal);\n\n","import React from 'react';\n\nconst renderInputTextArea = ({input, label, meta, optional, placeholder}) => {\n    return (\n        <div className=\"field\">\n            <label>{label}</label>\n            <textarea {...input} rows=\"3\" placeholder={placeholder}/>\n            {(optional && <>\n                <div className=\"ui pointing label\">\n                    Optional Field\n                </div>\n            </>)}\n        </div>\n    )\n}\n\nexport default renderInputTextArea;","import React from 'react';\n\nconst renderInputCheckbox = ({input, meta, optional, label}) => {\n    return (\n        <div className=\"field\">\n            <div className=\"ui toggle checkbox\">\n                <input {...input} type=\"checkbox\"/>\n                <label>{label}</label>\n            </div>\n        </div>\n    )\n}\n\nexport default renderInputCheckbox;","import React from 'react';\n\nconst renderInput = ({input, label, meta, optional, type, placeholder}) => {\n    return (\n        <div className=\"field\">\n            <label>{label}</label>\n            <input {...input} type={type} placeholder={placeholder}/>\n            {(optional && <>\n                <div className=\"ui pointing label\">\n                    Optional Field\n                </div>\n            </> )}\n        </div>\n    )\n}\n\nexport default renderInput;","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport moment from 'moment';\nimport {connect} from 'react-redux';\nimport Modal from \"../../../UI/Modal/Modal\";\nimport DatePicker from '../../../UI/Datepicker';\nimport {toggleModal} from \"../../../../actions/uiActions\";\nimport {createGoal, loadGoals} from \"../../../../actions/goalsActions\";\nimport renderInputTextArea from '../../../UI/TextArea';\nimport renderInputCheckbox from '../../../UI/Checkbox';\nimport renderInput from '../../../UI/Input';\n\nclass AddShortTermGoalModal extends Component {\n\n    onClose() {\n        this.props.toggleModal('shortTermGoal');\n    }\n\n    onSubmit = (formValues) => {\n        let formOutput = {...formValues, column_id: this.props.myProps.longTermGoalId};\n        // console.log('creating new goal ==> ');\n        // console.log(formOutput);\n        this.props.createGoal(formOutput).then((response) => {\n            const {status} = response.data;\n            if (status === 'success') {\n                this.props.loadGoals(0, this.props.boardShowGoals); //refresh goals (to display new one)\n                setTimeout(() => {\n                    this.props.toggleModal('shortTermGoal'); //close modal once goal is created\n                }, 2000)\n            }\n        });\n\n    };\n\n    render() {\n        const title = 'Add your short-term goal!';\n\n        const content = <React.Fragment>\n\n            <p>Short-term goals are defined in <strong>days or weeks</strong> and relate with your long term goal\n                purpose.</p>\n\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n                <Field name=\"title\" component={renderInput} label=\"Enter title\"\n                       placeholder=\"A summary about what's your goal about\"/>\n                <Field name=\"description\" textarea={true} component={renderInputTextArea} label=\"Enter description\"\n                       placeholder=\"Describe what you have to do in details, to accomplish it\"/>\n                <Field name=\"duration_hrs\" type=\"number\" optional={true} component={renderInput}\n                       label=\"Estimated duration (hrs)\"/>\n                <Field\n                    name=\"deadline\"\n                    label=\"Deadline\" \n                    inputValueFormat=\"YYYY-MM-DD\"\n                    // dateFormat=\"L\"\n                    dateFormatCalendar=\"dddd\"\n                    placeholderText=\"Select deadline\"\n                    fixedHeight\n                    showMonthDropdown\n                    showYearDropdown\n                    minDate={new Date()}\n                    maxDate={new Date(this.props.deadline)}\n                    dropdownMode=\"select\"\n                    normalize={value => (value ? moment(value).format('YYYY-MM-DD') : null)}\n                    component={DatePicker}\n                />\n                \n                <Field name=\"priority\" component={renderInputCheckbox}\n                       label=\"Is this a priority goal?\"/>\n            </form>\n        </React.Fragment>;\n\n\n        const actions = <React.Fragment>\n            <button className=\"ui button positive\" onClick={this.props.handleSubmit(this.onSubmit)}>New Goal</button>\n            <button className=\"ui button negative\" onClick={() => this.onClose()}>Cancel</button>\n        </React.Fragment>;\n\n        return (\n            <Modal name='shortTermGoal' title={title} content={content} actions={actions}/>\n        );\n    }\n\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n\n    const {boardShowGoals, modals} = state.ui;\n\n    return {\n        myProps: ownProps,\n        modals: modals,\n        boardShowGoals: boardShowGoals,\n        initialValues: {\n            title: '',\n            description: '',\n            duration_hrs: '',\n            deadline: '',\n            priority: false,\n        }\n    };\n};\n\nconst formWrapped = reduxForm({\n    form: 'AddShortTermGoalModal',\n    enableReinitialize: true\n})(AddShortTermGoalModal);\n\nexport default connect(mapStateToProps, {\n    //some actions here\n    toggleModal,\n    createGoal,\n    loadGoals\n})(formWrapped)\n","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport moment from 'moment';\nimport {connect} from 'react-redux';\nimport Modal from \"../../../UI/Modal/Modal\";\nimport DatePicker from '../../../UI/Datepicker';\nimport {toggleModal} from \"../../../../actions/uiActions\";\nimport {createLongTermGoal, loadGoals, loadUserGoalsCategories} from \"../../../../actions/goalsActions\";\nimport Loading from \"../../../UI/Loading/Loading\";\n\nclass AddLongTermGoalModal extends Component {\n\n\n    componentDidMount() {\n\n        this.props.loadUserGoalsCategories().then(() => {\n            //set first option as selected\n            this.props.change('board_id', this.props.boardCategories[0].id)\n        });\n    }\n\n\n    onClose() {\n        this.props.toggleModal('longTermGoal');\n    }\n\n    renderInput({input, label, meta, optional, type, textarea, placeholder}) {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                {(textarea ? <textarea {...input} rows=\"3\" placeholder={placeholder}/> :\n                    <input {...input} type={type} placeholder={placeholder}/>)}\n                {(optional ? <>\n                    <div className=\"ui pointing label\">\n                        Optional Field\n                    </div>\n                </> : null)}\n\n\n            </div>\n        )\n    }\n\n    renderInputTextArea({input, label, meta, optional, placeholder}) {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <textarea {...input} rows=\"3\" placeholder={placeholder}/>\n                {(optional ? <>\n                    <div className=\"ui pointing label\">\n                        Optional Field\n                    </div>\n                </> : null)}\n            </div>\n        )\n    }\n\n    renderInputCheckbox({input, meta, optional, label}) {\n        return (\n            <div className=\"field\">\n                <div className=\"ui toggle checkbox\">\n                    <input {...input} type=\"checkbox\"/>\n                    <label>{label}</label>\n                </div>\n            </div>\n        )\n    }\n\n    onRenderBoardOptions() {\n        return this.props.boardCategories.map((category) => <option key={category.id}\n                                                                    value={category.id}>{category.name}</option>);\n    }\n\n    renderInputSelectBoards({input, meta, optional, label, children}) {\n\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <select {...input}>\n                    {children}\n                </select>\n            </div>\n        )\n    }\n\n    render() {\n        const title = 'Add your Long Term goal!';\n\n        const content = <React.Fragment>\n\n\n            <p>A long-term goal is something you want to do in the future, for example, in the next 3 months.</p>\n\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n                <Field name=\"name\" component={this.renderInput} label=\"Enter a long term goal title\"\n                       placeholder=\"A summary about what's your goal about\"/>\n                <Field name=\"description\" textarea={true} component={this.renderInputTextArea}\n                       label=\"Enter your long term goal description\"\n                       placeholder=\"Describe what you have to do in details, to accomplish it\"/>\n\n                <Field name=\"board_id\" component={this.renderInputSelectBoards}\n                       label=\"Category\">\n                    {this.props.boardCategories ? this.onRenderBoardOptions() : <Loading/>}\n                </Field>\n\n                <Field\n                    name=\"deadline\"\n                    label=\"Deadline\" \n                    inputValueFormat=\"YYYY-MM-DD\"\n                    // dateFormat=\"L\"\n                    dateFormatCalendar=\"dddd\"\n                    placeholderText=\"Select deadline\"\n                    fixedHeight\n                    showMonthDropdown\n                    showYearDropdown\n                    minDate={new Date()}\n                    maxDate={new Date(this.props.deadline)}\n                    dropdownMode=\"select\"\n                    normalize={value => (value ? moment(value).format('YYYY-MM-DD') : null)}\n                    component={DatePicker}\n                />\n            </form>\n        </React.Fragment>;\n\n\n        const actions = <React.Fragment>\n            <button className=\"ui button positive\" onClick={this.props.handleSubmit(this.onSubmit)}>New Goal</button>\n            <button className=\"ui button negative\" onClick={() => this.onClose()}>Cancel</button>\n        </React.Fragment>;\n\n        return (\n            <Modal name='longTermGoal' title={title} content={content} actions={actions}/>\n        );\n    }\n\n\n    onSubmit = (formValues) => {\n\n        let formOutput = {...formValues};\n\n        // console.log('creating new goal ==> ');\n        console.log(formOutput);\n\n        this.props.createLongTermGoal(formOutput).then((response) => {\n\n            const {status} = response.data;\n\n            if (status === 'success') {\n\n                this.props.loadGoals(0, this.props.boardShowGoals); //refresh goals (to display new one)\n\n                setTimeout(() => {\n                    this.props.toggleModal('longTermGoal'); //close modal once goal is created\n                }, 4000)\n\n            }\n\n\n        });\n\n    };\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n\n    const {modals, boardCategories, boardShowGoals} = state.ui;\n\n    return {\n        myProps: ownProps,\n        modals: modals,\n        boardCategories: boardCategories,\n        boardShowGoals: boardShowGoals,\n        initialValues: {\n            name: '',\n            description: '',\n            deadline: '',\n            board_id: null\n        }\n    };\n};\n\nconst formWrapped = reduxForm({\n    form: 'AddLongTermGoalModal',\n    enableReinitialize: true\n})(AddLongTermGoalModal);\n\nexport default connect(mapStateToProps, {\n    //some actions here\n    toggleModal,\n    createLongTermGoal,\n    loadGoals,\n    loadUserGoalsCategories\n})(formWrapped)\n","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\nimport moment from 'moment';\nimport DatePicker from '../../../UI/Datepicker';\nimport Modal from \"../../../UI/Modal/Modal\";\nimport {toggleModal} from \"../../../../actions/uiActions\";\nimport {createLongTermGoal, loadGoals, loadUserGoalsCategories, editColumns} from \"../../../../actions/goalsActions\";\nimport Loading from \"../../../UI/Loading/Loading\";\n\nclass EditLongTermGoalModal extends Component {\n\n\n    componentDidMount() {\n\n        this.props.loadUserGoalsCategories().then(() => {\n            //set first option as selected\n\n\n            const boardName = this.props.myProps.longTermGoal.boardName;\n            const board_id = this.props.boardCategories.find((category) => category.name === boardName).id;\n\n            console.log('setting board id to...' + board_id);\n\n            this.props.change('board_id', board_id)\n        });\n    }\n\n\n    onClose() {\n        this.props.toggleModal('editLongTermGoal');\n    }\n\n    renderInput({input, label, meta, optional, type, textarea, placeholder}) {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                {(textarea ? <textarea {...input} rows=\"3\" placeholder={placeholder}/> :\n                    <input {...input} type={type} placeholder={placeholder}/>)}\n                {(optional ? <>\n                    <div className=\"ui pointing label\">\n                        Optional Field\n                    </div>\n                </> : null)}\n\n\n            </div>\n        )\n    }\n\n    renderInputTextArea({input, label, meta, optional, placeholder}) {\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <textarea {...input} rows=\"3\" placeholder={placeholder}/>\n                {(optional ? <>\n                    <div className=\"ui pointing label\">\n                        Optional Field\n                    </div>\n                </> : null)}\n            </div>\n        )\n    }\n\n    renderInputCheckbox({input, meta, optional, label}) {\n        return (\n            <div className=\"field\">\n                <div className=\"ui toggle checkbox\">\n                    <input {...input} type=\"checkbox\"/>\n                    <label>{label}</label>\n                </div>\n            </div>\n        )\n    }\n\n    onRenderBoardOptions() {\n        return this.props.boardCategories.map((category) => <option key={category.id}\n                                                                    value={category.id}>{category.name}</option>);\n    }\n\n    renderInputSelectBoards({input, meta, optional, label, children}) {\n\n        return (\n            <div className=\"field\">\n                <label>{label}</label>\n                <select {...input}>\n                    {children}\n                </select>\n            </div>\n        )\n    }\n\n    render() {\n        const title = 'Edit your Long Term goal!';\n\n        const content = <React.Fragment>\n\n\n            <p>A long-term goal is something you want to do in the future, for example, in the next 3 months.</p>\n\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n                <Field name=\"name\" component={this.renderInput} label=\"Enter a long term goal title\"\n                       placeholder=\"A summary about what's your goal about\"/>\n\n                <Field name=\"description\" textarea={true} component={this.renderInputTextArea}\n                       label=\"Enter your long term goal description\"\n                       placeholder=\"Describe what you have to do in details, to accomplish it\"/>\n\n                <Field name=\"board_id\" component={this.renderInputSelectBoards}\n                       label=\"Category\">\n                    {this.props.boardCategories ? this.onRenderBoardOptions() : <Loading/>}\n                </Field>\n\n                <Field\n                    name=\"deadline\"\n                    label=\"Deadline\" \n                    inputValueFormat=\"YYYY-MM-DD\"\n                    // dateFormat=\"L\"\n                    currentDeadline={this.props.myProps.longTermGoal.deadline}\n                    dateFormatCalendar=\"MMMM\"\n                    placeholderText=\"Select deadline\"\n                    fixedHeight\n\n                    showMonthDropdown\n                    showYearDropdown\n                    scrollableYearDropdown\n\n                    minDate={new Date()}\n                    // maxDate={new Date(this.props.deadline)}\n                    // dropdownMode=\"select\"\n                    normalize={value => (value ? moment(value).format('YYYY-MM-DD') : null)}\n                    component={DatePicker}\n                />\n            </form>\n        </React.Fragment>;\n\n\n        const actions = <React.Fragment>\n            <button className=\"ui button positive\" onClick={this.props.handleSubmit(this.onSubmit)}>Update</button>\n            <button className=\"ui button negative\" onClick={() => this.onClose()}>Cancel</button>\n        </React.Fragment>;\n\n        return (\n            <Modal name='editLongTermGoal' title={title} content={content} actions={actions}/>\n        );\n    }\n\n\n    onSubmit = (formValues) => {\n        console.log(this.props);\n        let formOutput = {\n            column_data: {\n                ...formValues\n            },\n            column_id: this.props.myProps.longTermGoal.id\n        };\n\n        this.props.editColumns(formOutput).then((response) => {\n\n            const {status} = response.data;\n\n            if (status === 'success') {\n\n                this.props.loadGoals(0, this.props.boardShowGoals); //refresh goals (to display new one)\n\n                setTimeout(() => {\n                    this.props.toggleModal('editLongTermGoal'); //close modal once goal is created\n                }, 4000)\n\n            }\n\n\n        });\n\n    };\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n\n    const {modals, boardCategories} = state.ui;\n\n    return {\n        myProps: ownProps,\n        modals: modals,\n        boardCategories: boardCategories,\n        initialValues: {\n            name: ownProps.longTermGoal.title,\n            description: ownProps.longTermGoal.description,\n            deadline: ownProps.longTermGoal.deadline.split('T')[0],\n            //board id is set on componentDidMount\n        }\n    };\n};\n\nconst formWrapped = reduxForm({\n    form: 'EditLongTermGoalModal',\n    enableReinitialize: true\n})(EditLongTermGoalModal);\n\nexport default connect(mapStateToProps, {\n    //some actions here\n    toggleModal,\n    createLongTermGoal,\n    loadGoals,\n    loadUserGoalsCategories,\n    editColumns\n})(formWrapped)\n","import React, {Component} from 'react';\n\nimport {connect} from 'react-redux'\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport ShortTermGoal from \"../ShortTermGoal/ShortTermGoal\";\nimport {deleteGoal, deleteLongTermGoal, loadGoals} from \"../../../../actions/goalsActions\";\nimport {toggleModal} from \"../../../../actions/uiActions\";\nimport Dropdown from \"../../../UI/Dropdown/Dropdown\";\nimport AddShortTermGoalModal from \"../ShortTermGoal/AddShortTermGoalModal\";\nimport AddLongTermGoalModal from \"./AddLongTermGoalModal\";\nimport EditLongTermGoalModal from \"./EditLongTermGoalModal\";\n\nclass LongTermGoal extends Component {\n\n    onConvertBoardNameClass(boardName) {\n\n        if (boardName.indexOf(' ') > -1) {\n            return boardName.split(' ').join('-').toLowerCase();\n        } else {\n            return boardName.toLowerCase();\n        }\n    }\n\n    onRenderShortTermGoalModal() {\n\n        if (this.props.modals.shortTermGoal.status === true && this.props.modals.shortTermGoal.id === this.props.myProps.id) {\n            return <AddShortTermGoalModal longTermGoalId={this.props.myProps.id}\n                                          deadline={this.props.myProps.deadline}/>\n        } else {\n            return null\n        }\n    }\n\n    onRenderLongTermGoalModal() {\n        if (this.props.modals.longTermGoal.status === true && this.props.modals.longTermGoal.id === this.props.myProps.id) { //make sure we are opening the modal corresponding to this component\n\n            return <AddLongTermGoalModal/>\n\n\n        } else {\n            return null\n        }\n    }\n\n\n    onDeleteLongTermGoal() {\n        this.props.deleteLongTermGoal(this.props.myProps.id).then(() => {\n            this.props.loadGoals(0, this.props.boardShowGoals)\n        });\n    }\n\n\n    onOpenShortTermGoalModal(longTermGoalId) {\n        this.props.toggleModal('shortTermGoal', longTermGoalId); //toggle a specific modal by triggering this action\n    }\n\n    onOpenLongTermGoalModal() {\n        this.props.toggleModal('longTermGoal', this.props.myProps.id);\n    }\n\n    onEditLongTermGoalModal() {\n        this.props.toggleModal('editLongTermGoal', this.props.myProps.id)\n    }\n\n    onRenderShortTermGoals() {\n\n        if (this.props.shortTermGoals !== undefined) {\n            return this.props.shortTermGoals.map((shortTermGoal) => {\n                return <ShortTermGoal onOpenModal={() => this.onOpenShortTermGoalModal(this.props.myProps.id)}\n                                      key={shortTermGoal.id}\n                                      longTermBoardName={this.onConvertBoardNameClass(this.props.myProps.boardName)}\n                                      shortTermGoal={shortTermGoal}\n                                      deadline={this.props.myProps.deadline}\n                />\n\n            });\n        } else {\n            return null;\n        }\n\n\n    }\n\n    onRenderEditLongTermGoals() {\n        if (this.props.modals.editLongTermGoal.status && this.props.modals.editLongTermGoal.id === this.props.myProps.id) {\n\n\n            console.log(`longtermgoal passing props=`);\n            console.log(this.props);\n\n            return <EditLongTermGoalModal longTermGoal={this.props.myProps}/>\n        } else {\n            return null;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div\n                    className={`board-column column-other column-${this.onConvertBoardNameClass(this.props.myProps.boardName)}`}>\n                    <div className=\"column-header\">\n                        <div className=\"column-info\">\n                            <div\n                                className={`column-icon ${this.onConvertBoardNameClass(this.props.myProps.boardName)}-icon`}>\n                            </div>\n                            <div\n                                className={`column-board color-other color-${this.onConvertBoardNameClass(this.props.myProps.boardName)}`}>\n                                {this.props.myProps.boardName}\n                            </div>\n                        </div>\n\n                        <div className=\"column-title\">\n                            {this.props.myProps.title}\n                        </div>\n                        <Dropdown\n                            triggerParentDelete={() => this.onDeleteLongTermGoal()}\n                            triggerParentOpenModal={() => this.onOpenLongTermGoalModal(this.props.myProps.id)}\n                            triggerParentEditModal={() => this.onEditLongTermGoalModal(this.props.myProps.id)}/>\n                    </div>\n\n                    <div className=\"column-status\">\n\n                        <div className=\"column-status-completed\">\n                            <div className=\"column-status-completed-icon\"></div>\n                            <div className=\"column-status-completed-text\">\n                                {this.props.myProps.completedGoalsProportion} COMPLETED\n                            </div>\n\n                        </div>\n\n\n                        <div className=\"column-status-deadline\">\n                            <div className=\"column-status-deadline-icon\"></div>\n                            <div className=\"column-status-deadline-text\">\n                                <Moment format=\"D MMMM, YY\">{this.props.myProps.deadline}</Moment>\n                            </div>\n\n                        </div>\n\n                        <div className=\"hackachieve-progress-bar w3-light-grey w3-round\" id=\"goal-progress\">\n                            <div className=\"w3-container w3-round hackachieve-bar\"\n                                 style={{\"width\": (this.props.myProps.percentageComplete * 100) + '%'}}> &nbsp;</div>\n                        </div>\n\n\n                    </div>\n\n                    <div className=\"column-body\" data-simplebar data-simplebar-auto-hide=\"false\">\n                        <div>{this.onRenderShortTermGoals()}</div>\n                    </div>\n\n                    <div className=\"column-footer\">\n\n                        <div className=\"column-add-short-term-goal\" onClick={() => {\n                            this.onOpenShortTermGoalModal(this.props.myProps.id)\n                        }}>\n                            <div className=\"column-add-short-term-goal-btn\"></div>\n                            <div className=\"column-add-short-term-goal-text\">Add Short Term Goal\n                            </div>\n                        </div>\n\n\n                    </div>\n\n\n                </div>\n\n                {this.onRenderShortTermGoalModal()}\n\n                {this.onRenderLongTermGoalModal()}\n\n                {this.onRenderEditLongTermGoals()}\n\n            </React.Fragment>\n        );\n    }\n}\n\nconst filteredGoals = (goals, filter) => {\n    // console.log(moment('2019-06-06T07:00:00Z', \"YYYYMMDD\").isSame(new Date(),\"week\"))\n    // eslint-disable-next-line\n    return filter === 'week' ? goals.filter((goal) => {\n        if (goal && moment(goal.deadline, \"YYYYMMDD\").isSame(new Date(), \"week\")) return goal\n    }) : goals;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const {boardShowGoals, modals} = state.ui;\n    return {\n        myProps: ownProps,\n        shortTermGoals: filteredGoals(ownProps.shortTermGoals, ownProps.filter),\n        modals: modals,\n        boardShowGoals: boardShowGoals\n    };\n};\n\nexport default connect(mapStateToProps, {\n    //actions here\n    deleteGoal,\n    loadGoals,\n    toggleModal,\n    deleteLongTermGoal\n})(LongTermGoal);\n\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux'\nimport {loadGoals, loadUserGoalsCategories} from \"../../../actions/goalsActions\";\nimport Loading from \"../../UI/Loading/Loading\";\nimport LongTermGoal from \"./LongTermGoal/LongTermGoal\";\nimport {toggleModal} from \"../../../actions/uiActions\";\nimport {Mixpanel as mixpanel} from \"../../../mixpanel\";\nimport AddLongTermGoalModal from \"./LongTermGoal/AddLongTermGoalModal\";\nimport {changeBoardShowGoal} from \"../../../actions/boardActions\";\n\n\n\nclass Board extends Component {\n\n    componentDidMount() {\n        this.props.loadGoals(0, this.props.boardShowGoals);\n\n        this.props.loadUserGoalsCategories();\n\n\n        mixpanel.track('board_visit')\n\n    }\n\n    onOpenLongTermModal() {\n\n        console.log('opening long term modal');\n\n\n        this.props.toggleModal('longTermGoal',0)\n\n    }\n\n    onRenderGoals() {\n\n        if (!this.props.goals) {\n            return <Loading/>\n        } else {\n            /* Render long term goals =========================================== */\n            return this.props.goals.map((goal) => {\n                if (goal.long_term_goals !== undefined) {\n                    //lets render only long term goals that have nested short term goals (to save space on user board!)\n                    if (goal.long_term_goals.length > 0) { // if there's goals to load...\n\n                        return goal.long_term_goals.map((long_term_goal) => {\n\n\n                            //progress bar variables\n                            let completedGoalsString = `${long_term_goal.total_completed_goals}/${long_term_goal.total_goals}`;\n                            let percentageCompleteString = long_term_goal.total_completed_goals / long_term_goal.total_goals;\n\n                            return <LongTermGoal\n                                key={long_term_goal.id}\n                                id={long_term_goal.id}\n                                boardName={goal.name}\n                                title={long_term_goal.name}\n                                description={long_term_goal.description}\n                                completedGoalsProportion={completedGoalsString}\n                                deadline={long_term_goal.deadline}\n                                shortTermGoals={long_term_goal.short_term_goals}\n                                percentageComplete={percentageCompleteString}\n                                filter={this.props.filter}\n                            />\n                        });\n                    }\n                }\n\n                return null;\n\n\n            });\n        }\n\n    }\n\n    onRenderLongTermGoalModal() {\n        if (this.props.modals.longTermGoal.status === true && !this.props.modals.longTermGoal.id) {\n            //when there's not id, the board component is the one responsible for opening the modal.\n\n            return <AddLongTermGoalModal/>\n\n\n        } else {\n            return null\n        }\n    }\n\n    onHandleBoardSwitchItem(type) {\n\n        if (type === this.props.boardShowGoals) {\n            return 'board-switch-item switch-active';\n        } else {\n\n            return 'board-switch-item';\n        }\n    }\n\n    onBoardSwitch(type) {\n\n        this.props.changeBoardShowGoal(type).then(() => {\n            this.props.loadGoals(0, this.props.boardShowGoals)\n        });\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <main className=\"board-main\">\n\n                    <div className=\"board-columns\">\n\n                        {this.onRenderGoals()}\n\n                        <div className=\"board-column-add column-add-short-term-goal\"\n                             onClick={() => this.onOpenLongTermModal()}>\n                            <div className=\"column-add-short-term-goal-btn\"></div>\n                            <div className=\"column-add-short-term-goal-text\">Add Long Term Goal</div>\n\n                        </div>\n\n\n                    </div>\n\n                    {this.onRenderLongTermGoalModal()}\n\n\n                </main>\n\n\n\n                <div className=\"i-phone\">\n                    <div className=\"board-switch\">\n                        <div className={this.onHandleBoardSwitchItem('all')}\n                             onClick={() => this.onBoardSwitch('all')}\n                        >\n                            <div className=\"board-switch-icon\"></div>\n                            <div className=\"board-switch-text\">ALL</div>\n                        </div>\n                        <div className={this.onHandleBoardSwitchItem('standby')}\n                         onClick={() => this.onBoardSwitch('standby')}>\n                            <div className=\"board-switch-icon\"></div>\n                            <div className=\"board-switch-text\">PENDING</div>\n                        </div>\n\n                        <div className=\"add-main\">\n                            <div className=\"plus\"></div>\n                        </div>\n                        <div className={this.onHandleBoardSwitchItem('ongoing')}\n                         onClick={() => this.onBoardSwitch('ongoing')}>\n                        <div className=\"board-switch-icon\"></div>\n                        <div className=\"board-switch-text\">ON GOING</div>\n                    </div>\n                        <div className={this.onHandleBoardSwitchItem('completed')}\n                             onClick={() => this.onBoardSwitch('completed')}>\n                            <div className=\"board-switch-icon\"></div>\n                            <div className=\"board-switch-text\">COMPLETED</div>\n                        </div>\n                    </div>\n                </div>\n\n\n            </React.Fragment>\n        );\n    }\n}\n\nconst filteredGoals = (goals, filter) => {\n   return  (filter === 'All' || filter === 'week') ? goals : goals.filter(goal => goal.name === filter);\n};\n\nconst mapStateToProps = (state) => {\n\n    return {\n        goals: filteredGoals(state.goal.goals, state.goal.filter),\n        boardShowGoals: state.ui.boardShowGoals,\n        modals: state.ui.modals,\n        filter: state.goal.filter\n    };\n};\n\nexport default connect(mapStateToProps, {\n    //actions here\n    loadGoals,\n    toggleModal,\n    changeBoardShowGoal,\n    loadUserGoalsCategories\n\n})(Board);\n\n","import React from 'react';\nimport env from '../../../../env';\n\nconst TermsOfUse = (props) => {\n    return (\n        <main>\n\n            <div className=\"ui text container terms\">\n\n                <h1>Terms of Use</h1>\n\n                <div className=\"ui divider\"></div>\n\n\n\n                    <p>These terms and conditions outline the rules and regulations for the use of Hackachieve's\n                        platform.</p>\n\n                    <p><strong>By accessing this platform we assume you accept these terms and conditions in full. Do\n                        not continue to\n                        use Hackachieve's platform\n                        if you do not accept all of the terms and conditions stated on this page.</strong></p>\n\n                    <p>These User Terms are a legally binding contract between you and us. As part of these User Terms,\n                        you agree to\n                        comply with the most recent version of our <a href=\"privacy\">Privacy Policy</a>, which is\n                        incorporated by\n                        reference into these User Terms. If you access or use the Services, or continue accessing or\n                        using the Services\n                        after being notified of a change to the User Terms or the Acceptable Use Policy, you confirm\n                        that you have read,\n                        understand and agree to be bound by the User Terms and the privacy policy.</p>\n\n                    <p>The following terminology applies to these Terms and Conditions, Privacy Statement and Disclaimer\n                        Notice\n                        and any or all Agreements: “Client”, “You” and “Your” refers to you, the person accessing this\n                        platform\n                        and accepting the Company’s terms and conditions. “The Company”, “Ourselves”, “We”, “Our” and\n                        “Us”, refers\n                        to our Company. “Party”, “Parties”, or “Us”, refers to both the Client and ourselves, or either\n                        the Client\n                        or ourselves. All terms refer to the offer, acceptance and consideration of payment necessary to\n                        undertake\n                        the process of our assistance to the Client in the most appropriate manner, whether by formal\n                        meetings\n                        of a fixed duration, or any other means, for the express purpose of meeting the Client’s needs\n                        in respect\n                        of provision of the Company’s stated services/products, in accordance with and subject to,\n                        prevailing law\n                        of Canada. Any use of the above terminology or other words in the singular, plural,\n                        capitalisation and/or he/she or they, are taken as interchangeable and therefore as referring to\n                        same.</p>\n\n\n                    <h2>Legal Age</h2>\n\n                    <h3>You Must be Over the Legal Age to use our platform</h3>\n                    <p>To the extent prohibited by applicable law, the Services are not intended for and should not be\n                        used by anyone\n                        under the legal age of your current province. You represent that you are over the legal age and\n                        are the intended\n                        recipient of Customer’s invitation to the Services. You may not access or use the Services for\n                        any purpose if\n                        either of the representations in the preceding sentence is not true. Without limiting the\n                        foregoing, you must be\n                        of legal working age.</p>\n\n\n                    <h2>Limitation of Liability</h2>\n\n                    <p>If we believe that there is a violation of the Contract, User Terms, the Acceptable Use Policy,\n                        or any of our\n                        other policies that can simply be remedied by Customer’s removal of certain Customer Data or\n                        taking other\n                        action, we will, in most cases, ask Customer to take action rather than intervene. We may\n                        directly step in and\n                        take what we determine to be appropriate action (including disabling your account) if Customer\n                        does not take\n                        appropriate action or we believe there is a credible risk of harm to us, the Services,\n                        Authorized Users, or any\n                        third parties. </p>\n\n                    <p>IN NO EVENT WILL YOU OR WE HAVE ANY LIABILITY TO THE OTHER FOR ANY LOST PROFITS OR REVENUES OR\n                        FOR ANY INDIRECT,\n                        SPECIAL, INCIDENTAL, CONSEQUENTIAL, COVER OR PUNITIVE DAMAGES HOWEVER CAUSED, WHETHER IN\n                        CONTRACT, TORT OR UNDER\n                        ANY OTHER THEORY OF LIABILITY, AND WHETHER OR NOT THE PARTY HAS BEEN ADVISED OF THE POSSIBILITY\n                        OF SUCH DAMAGES.\n                        UNLESS YOU ARE ALSO A CUSTOMER (AND WITHOUT LIMITATION TO OUR RIGHTS AND REMEDIES UNDER THE\n                        CONTRACT), YOU WILL\n                        HAVE NO FINANCIAL LIABILITY TO US FOR A BREACH OF THESE USER TERMS. OUR MAXIMUM AGGREGATE\n                        LIABILITY TO YOU FOR\n                        ANY BREACH OF THE USER TERMS IS ONE HUNDRED DOLLARS ($100) IN THE AGGREGATE. THE FOREGOING\n                        DISCLAIMERS WILL NOT\n                        APPLY TO THE EXTENT PROHIBITED BY APPLICABLE LAW AND DO NOT LIMIT EITHER PARTY’S RIGHT TO SEEK\n                        AND OBTAIN\n                        EQUITABLE RELIEF.</p>\n\n                    <h2>Third Party Applications</h2>\n\n                    <p>The Hackachieve service is integrated with third party applications, websites, and services\n                        (“Third Party\n                        Applications”) to make available content, products, and/or services to you. These Third Party\n                        Applications may\n                        have their own terms and conditions of use and privacy policies and your use of these Third\n                        Party Applications\n                        will be governed by and subject to such terms and conditions and privacy policies. You\n                        understand and agree that\n                        Hackachieve does not endorse and is not responsible or liable for the behavior, features, or\n                        content of any\n                        Third Party Application or for any transaction you may enter into with the provider of any such\n                        Third Party\n                        Applications.</p>\n\n                    <h2>User Generated Content</h2>\n\n                    <p>Hackachieve users may post, upload, and/or contribute (“post”) content to the Service (which may\n                        include, for\n                        example, pictures, text, messages, information and/or other types of content) (“User Content”).\n                        For the\n                        avoidance of doubt, “User Content” includes any such content posted to the Hackachieve Support\n                        Community as well\n                        as any other part of the Hackachieve Service.\n\n                        You promise that, with respect to any User Content you post on Hackachieve, (1) you have the\n                        right to post such\n                        User Content, and (2) such User Content, or its use by Hackachieve as contemplated by the\n                        Agreements, does not\n                        violate the Agreements, applicable law, or the intellectual property (including without\n                        limitation copyright),\n                        publicity, personality, or other rights of others or imply any affiliation with or endorsement\n                        of you or your\n                        User Content by Hackachieve.\n\n                        Hackachieve may, but has no obligation to, monitor, review, or edit User Content. In all cases,\n                        Hackachieve\n                        reserves the right to remove or disable access to any User Content for any or no reason,\n                        including but not\n                        limited to, User Content that, in Hackachieve’s sole discretion, violates the Agreements.\n                        Hackachieve may take\n                        these actions without prior notification to you or any third party. Removal or disabling of\n                        access to User\n                        Content shall be at our sole discretion, and we do not promise to remove or disable access to\n                        any specific User\n                        Content.\n\n                        You are solely responsible for all User Content that you post. Hackachieve is not responsible\n                        for User Content\n                        nor does it endorse any opinion contained in any User Content. YOU AGREE THAT IF ANYONE BRINGS A\n                        CLAIM AGAINST\n                        HACKACHIEVE RELATED TO USER CONTENT THAT YOU POST, THEN, TO THE EXTENT PERMISSIBLE UNDER LOCAL\n                        LAW, YOU WILL\n                        INDEMNIFY AND HOLD HACKACHIEVE HARMLESS FROM AND AGAINST ALL DAMAGES, LOSSES, AND EXPENSES OF\n                        ANY KIND\n                        (INCLUDING REASONABLE ATTORNEY FEES AND COSTS) ARISING OUT OF SUCH CLAIM.</p>\n\n                    <h2>Rights you grant to us</h2>\n\n                    <p>In consideration for the rights granted to you under the Agreements, you grant us the right (1)\n                        to allow the\n                        Hackachieve Service to use the processor, bandwidth, and storage hardware on your Device in\n                        order to facilitate\n                        the operation of the Service, (2) to provide advertising and other information to you, and (3)\n                        to allow our\n                        business partners to do the same. In any part of the Hackachieve Service, the Content you view,\n                        including its\n                        selection and placement, may be influenced by commercial considerations, including agreements\n                        with third\n                        parties. Some Content licensed or provided to Hackachieve may contain advertising as part of the\n                        Content. In\n                        such cases, Hackachieve will make such Content available to you unmodified.\n\n                        If you provide feedback, ideas or suggestions to Hackachieve in connection with the Hackachieve\n                        Service or\n                        Content (“Feedback”), you acknowledge that the Feedback is not confidential and you authorize\n                        Hackachieve to use\n                        that Feedback without restriction and without payment to you. Feedback is considered a type of\n                        User Content.\n\n                        You grant Hackachieve a non-exclusive, transferable, sub-licensable, royalty-free, perpetual\n                        (or, in\n                        jurisdictions where this is not permitted, for a term equal to the duration of the Agreements\n                        plus twenty (20)\n                        years), irrevocable, fully paid, worldwide licence to use, reproduce, make available to the\n                        public (e.g. perform\n                        or display), publish, translate, modify, create derivative works from, and distribute any of\n                        your User Content\n                        in connection with the Service through any medium, whether alone or in combination with other\n                        content or\n                        materials, in any manner and by any means, method or technology, whether now known or hereafter\n                        created. Aside\n                        from the rights specifically granted herein, you retain ownership of all rights, including\n                        intellectual property\n                        rights, in the User Content. Where applicable and permitted under applicable law, you also agree\n                        to waive any\n                        “moral rights” (or the equivalent under applicable law) such as your right to be identified as\n                        the author of any\n                        User Content, including Feedback, and your right to object to derogatory treatment of such User\n                        Content.</p>\n\n                    <h2>User guidelines</h2>\n\n                    <p>Hackachieve respects intellectual property rights and expects you to do the same. We’ve\n                        established a few ground\n                        rules for you to follow when using the Service, to make sure Hackachieve stays enjoyable for\n                        everyone. Please\n                        follow these rules and encourage other users to do the same.</p>\n\n                    <p>The following is not permitted for any reason whatsoever:</p>\n\n                    <ul>\n                        <li>copying, redistributing, reproducing, “ripping”, recording, transferring, performing or\n                            displaying to the\n                            public, broadcasting, or making available to the public any part of the Hackachieve Service\n                            or the Content,\n                            or otherwise making any use of the Hackachieve Service or the Content which is not expressly\n                            permitted under\n                            the Agreements or applicable law or which otherwise infringes the intellectual property\n                            rights (such as\n                            copyright) in the Hackachieve Service or the Content or any part of it;\n                        </li>\n                        <li>using the Hackachieve Service to import or copy any local files you do not have the legal\n                            right to import or\n                            copy in this way;\n                        </li>\n                        <li>transferring copies of cached Content from an authorized Device to any other Device via any\n                            means;\n                        </li>\n                        <li>reverse-engineering, decompiling, disassembling, modifying, or creating derivative works\n                            based on the\n                            Hackachieve Service, Content or any part thereof unless permitted by applicable law;\n                        </li>\n                        <li>circumventing any technology used by Hackachieve, its licensors, or any third party to\n                            protect the Content\n                            or the Service;\n                        </li>\n                        <li>selling, renting, sublicensing or leasing of any part of the Hackachieve Service or the\n                            Content;\n                        </li>\n                        <li>circumventing any territorial restrictions applied by Hackachieve or it licensors;</li>\n                        <li>artificially increasing visit count or otherwise manipulating the Services by using a script\n                            or other\n                            automated process;\n                        </li>\n                        <li>removing or altering any copyright, trademark, or other intellectual property notices\n                            contained on or\n                            provided through the Hackachieve Service (including for the purpose of disguising or\n                            changing any\n                            indications of the ownership or source of any Content);\n                        </li>\n                        <li>providing your password to any other person or using any other person’s username and\n                            password;\n                        </li>\n                        <li>“crawling” the Hackachieve Service or otherwise using any automated means (including bots,\n                            scrapers, and\n                            spiders) to collect information from Hackachieve; or\n                        </li>\n                        <li>selling a user account, or otherwise accepting any compensation, financial or otherwise, to\n                            influence the\n                            name of an account the content included on an account.\n                        </li>\n                    </ul>\n\n                    <p>Please respect Hackachieve, the owners of the Content, and other users of the Hackachieve\n                        Service. Don’t engage\n                        in any activity, post any User Content, or register and/or use a username, which is or includes\n                        material\n                        that:</p>\n\n                    <ul>\n                        <li>is offensive, abusive, defamatory, pornographic, threatening, or obscene;</li>\n                        <li>is illegal, or intended to promote or commit an illegal act of any kind, including but not\n                            limited to\n                            violations of intellectual property rights, privacy rights, or proprietary rights of\n                            Hackachieve or a third\n                            party;\n                        </li>\n                        <li>includes your password or purposely includes any other user’s password or purposely includes\n                            personal data\n                            of third parties or is intended to solicit such personal data;\n                        </li>\n                        <li>includes malicious content such as malware, Trojan horses, or viruses, or otherwise\n                            interferes with any\n                            user’s access to the Service;\n                        </li>\n                        <li>is intended to or does harass or bully other users;</li>\n                        <li>impersonates or misrepresents your affiliation with another user, person, or entity, or is\n                            otherwise\n                            fraudulent, false, deceptive, or misleading;\n                        </li>\n                        <li>uses automated means to artificially promote content;</li>\n                        <li>involves the transmission of unsolicited mass mailings or other forms of spam (“spam”), junk\n                            mail, chain\n                            letters, or similar, including through the Hackachieve inbox;\n                        </li>\n                        <li>involves commercial or sales activities, such as advertising, promotions, contests,\n                            sweepstakes, or pyramid\n                            schemes, that are not expressly authorized by Hackachieve;\n                        </li>\n                        <li>links to, references, or otherwise promotes commercial products or services, except as\n                            expressly authorized\n                            by Hackachieve;\n                        </li>\n                        <li>interferes with or in any way disrupts the Hackachieve Service, tampers with, breaches, or\n                            attempts to\n                            probe, scan, or test for vulnerabilities in the Service or Hackachieve’s computer systems,\n                            network, usage\n                            rules, or any of Hackachieve’s security components, authentication measures or any other\n                            protection measures\n                            applicable to the Service, the Content or any part thereof; or\n                        </li>\n                        <li>conflicts with the Agreements, as determined by Hackachieve.</li>\n                    </ul>\n\n                    <p>You acknowledge and agree that posting any such User Content may result in immediate termination\n                        or suspension of\n                        your Hackachieve account. You also agree that Hackachieve may also reclaim your username for any\n                        reason.</p>\n\n                    <p>Please be thoughtful about how you use the Hackachieve Service and what you share. The\n                        Hackachieve Service\n                        includes social and interactive features, including the ability to post User Content, share\n                        content, and make\n                        certain information about you public. Remember that shared or publicly available information may\n                        be used and\n                        re-shared by other users on Hackachieve or across the web, so please use Hackachieve carefully\n                        and be mindful of\n                        your account settings. Hackachieve has no responsibility for your choices to post material on\n                        the Service.</p>\n\n                    <p>Your password protects your user account, and you are solely responsible for keeping your\n                        password confidential\n                        and secure. You understand that you are responsible for all use of your username and password on\n                        the Service. If\n                        your username or password is lost or stolen, or if you believe there has been unauthorized\n                        access to your\n                        account by third parties, please notify us immediately and change your password as soon as\n                        possible.</p>\n\n                    <h2>Infringement and reporting User Content</h2>\n\n                    <p>Hackachieve respects the rights of intellectual property owners. If you believe that any Content\n                        infringes your\n                        intellectual property rights or other rights, send an e-mail to\n                        <a href={`mailto:${env.adminEmail}`}>{env.adminEmail}</a> and the\n                        content will be removed immediately. If Hackachieve is\n                        notified by a copyright holder that any Content infringes a copyright, Hackachieve may in its\n                        absolute\n                        discretion take actions without prior notification to the provider of that Content. If the\n                        provider believes\n                        that the content is not infringing, the provider may submit a counter-notification to\n                        Hackachieve with a request\n                        to restore the removed content.</p>\n\n\n                    <h2>Service limitations and modifications</h2>\n\n                    <p>Hackachieve will make reasonable efforts to keep the Hackachieve Service operational. However,\n                        certain technical\n                        difficulties or maintenance may, from time to time, result in temporary interruptions. To the\n                        extent permissible\n                        under applicable law, Hackachieve reserves the right, periodically and at any time, to modify or\n                        discontinue,\n                        temporarily or permanently, functions and features of the Hackachieve Service, with or without\n                        notice, all\n                        without liability to you, except where prohibited by law, for any interruption, modification, or\n                        discontinuation\n                        of the Hackachieve Service or any function or feature thereof.</p>\n\n\n                    <h2>Cookies</h2>\n                    <p>We employ the use of cookies. By using Hackachieve's platform you consent to the use of cookies\n                        in accordance with Hackachieve’s privacy policy.</p>\n                    <p>Most of the modern day interactive web sites\n                        use cookies to enable us to retrieve user details for each visit. Cookies are used in some areas\n                        of our site\n                        to enable the functionality of this area and ease of use for those people visiting. Some of our\n                        affiliate / advertising partners may also use cookies.</p>\n                    <h2>License</h2>\n                    <p>Unless otherwise stated, Hackachieve and/or it’s licensors own the\n                        intellectual property rights for\n                        all material on Hackachieve. All intellectual property rights are reserved. You may view and/or\n                        print\n                        pages from {env.productionUrl} for your own personal use subject to restrictions set\n                        in these terms\n                        and conditions.</p>\n                    <p>You must not:</p>\n                    <ol>\n                        <li>Republish material from {env.productionUrl}</li>\n                        <li>Sell, rent or sub-license material from\n                            {env.productionUrl}\n                        </li>\n                        <li>Reproduce, duplicate or copy material from\n                            {env.productionUrl}\n                        </li>\n                        <li>Redistribute content from Hackachieve (unless content is specifically made for\n                            redistribution).\n                        </li>\n                    </ol>\n\n                    <h2>User Comments</h2>\n                    <ol>\n                        <li>Certain parts of this platform offer the opportunity for users to post and exchange\n                            opinions, information,\n                            material and data ('Comments') in areas of the platform. Hackachieve does not screen, edit,\n                            publish\n                            or review Comments prior to their appearance on the platform and Comments do not reflect the\n                            views or\n                            opinions of Hackachieve, its agents or affiliates. Comments reflect the view and opinion of\n                            the\n                            person who posts such view or opinion. To the extent permitted by applicable laws\n                            Hackachieve shall\n                            not be responsible or liable for the Comments or for any loss cost, liability, damages or\n                            expenses caused\n                            and or suffered as a result of any use of and/or posting of and/or appearance of the\n                            Comments on this\n                            platform.\n                        </li>\n                        <li>Hackachieve reserves the right to monitor all Comments and to remove any Comments which it\n                            considers\n                            in its absolute discretion to be inappropriate, offensive or otherwise in breach of these\n                            Terms and\n                            Conditions.\n                        </li>\n                        <li>You warrant and represent that:\n                            <ol>\n                                <li>You are entitled to post the Comments on our platform and have all necessary\n                                    licenses and consents\n                                    to\n                                    do so;\n                                </li>\n                                <li>The Comments do not infringe any intellectual property right, including without\n                                    limitation\n                                    copyright,\n                                    patent or trademark, or other proprietary right of any third party;\n                                </li>\n                                <li>The Comments do not contain any defamatory, libelous, offensive, indecent or\n                                    otherwise unlawful\n                                    material\n                                    or material which is an invasion of privacy\n                                </li>\n                                <li>The Comments will not be used to solicit or promote business or custom or present\n                                    commercial\n                                    activities\n                                    or unlawful activity.\n                                </li>\n                            </ol>\n                        </li>\n                        <li>You hereby grant to <strong>Hackachieve</strong> a non-exclusive royalty-free license to\n                            use, reproduce,\n                            edit and authorize others to use, reproduce and edit any of your Comments in any and all\n                            forms, formats\n                            or media.\n                        </li>\n                    </ol>\n                    <h2>Hyperlinking to our Content</h2>\n                    <ol>\n                        <li>The following organizations may link to our Web site without prior written approval:\n                            <ol>\n                                <li>Government agencies;</li>\n                                <li>Search engines;</li>\n                                <li>News organizations;</li>\n                                <li>Online directory distributors when they list us in the directory may link to our Web\n                                    site in the\n                                    same\n                                    manner as they hyperlink to the Web sites of other listed businesses; and\n                                </li>\n                                <li>Systemwide Accredited Businesses except soliciting non-profit organizations, charity\n                                    shopping malls,\n                                    and charity fundraising groups which may not hyperlink to our Web site.\n                                </li>\n                            </ol>\n                        </li>\n                    </ol>\n                    <ol>\n                        <li>These organizations may link to our home page, to publications or to other Web site\n                            information so long\n                            as the link: (a) is not in any way misleading; (b) does not falsely imply sponsorship,\n                            endorsement or\n                            approval of the linking party and its products or services; and (c) fits within the context\n                            of the linking\n                            party's site.\n                        </li>\n                        <li>We may consider and approve in our sole discretion other link requests from the following\n                            types of\n                            organizations:\n                            <ol>\n                                <li>commonly-known consumer and/or business information sources such as Chambers of\n                                    Commerce, American\n                                    Automobile Association, AARP and Consumers Union;\n                                </li>\n                                <li>dot.com community sites;</li>\n                                <li>associations or other groups representing charities, including charity giving\n                                    sites,\n                                </li>\n                                <li>online directory distributors;</li>\n                                <li>internet portals;</li>\n                                <li>accounting, law and consulting firms whose primary clients are businesses; and</li>\n                                <li>educational institutions and trade associations.</li>\n                            </ol>\n                        </li>\n                    </ol>\n                    <p>We will approve link requests from these organizations if we determine that: (a) the link would\n                        not reflect\n                        unfavorably on us or our accredited businesses (for example, trade associations or other\n                        organizations\n                        representing inherently suspect types of business, such as work-at-home opportunities, shall not\n                        be allowed\n                        to link); (b)the organization does not have an unsatisfactory record with us; (c) the benefit to\n                        us from\n                        the visibility associated with the hyperlink outweighs the absence of Hackachieve;\n                        and (d) where the\n                        link is in the context of general resource information or is otherwise consistent with editorial\n                        content\n                        in a newsletter or similar product furthering the mission of the organization.</p>\n\n                    <p>These organizations may link to our home page, to publications or to other Web site information\n                        so long as\n                        the link: (a) is not in any way misleading; (b) does not falsely imply sponsorship, endorsement\n                        or approval\n                        of the linking party and it products or services; and (c) fits within the context of the linking\n                        party's\n                        site.</p>\n\n                    <p>If you are among the organizations listed in paragraph 2 above and are interested in linking to\n                        our platform,\n                        you must notify us by sending an e-mail to <a href={`mailto:${env.adminEmail}`}\n                        >{env.adminEmail}</a>.\n                        Please include your name, your organization name, contact information (such as a phone number\n                        and/or e-mail\n                        address) as well as the URL of your site, a list of any URLs from which you intend to link to\n                        our Web site,\n                        and a list of the URL(s) on our site to which you would like to link. Allow 2-3 weeks for a\n                        response.</p>\n\n                    <p>Approved organizations may hyperlink to our Web site as follows:</p>\n\n                    <ol>\n                        <li>By use of our corporate name; or</li>\n                        <li>By use of the uniform resource locator (Web address) being linked to; or</li>\n                        <li>By use of any other description of our Web site or material being linked to that makes sense\n                            within the\n                            context and format of content on the linking party's site.\n                        </li>\n                    </ol>\n                    <p>No use of Hackachieve’s logo or other artwork will be allowed for linking absent a trademark\n                        license\n                        agreement.</p>\n                    <h2>Iframes</h2>\n                    <p>Without prior approval and express written permission, you may not create frames around our Web\n                        pages or\n                        use other techniques that alter in any way the visual presentation or appearance of our Web\n                        site.</p>\n                    <h2>Reservation of Rights</h2>\n                    <p>We reserve the right at any time and in its sole discretion to request that you remove all links\n                        or any\n                        particular\n                        link to our Web site. You agree to immediately remove all links to our Web site upon such\n                        request. We also\n                        reserve the right to amend these terms and conditions and its linking policy at any time. By\n                        continuing\n                        to link to our Web site, you agree to be bound to and abide by these linking terms and\n                        conditions.</p>\n                    <h2>Removal of links from our platform</h2>\n                    <p>If you find any link on our Web site or any linked web site objectionable for any reason, you may\n                        contact\n                        us about this. We will consider requests to remove links but will have no obligation to do so or\n                        to respond\n                        directly to you.</p>\n                    <p>Whilst we endeavour to ensure that the information on this platform is correct, we do not warrant\n                        its\n                        completeness\n                        or accuracy; nor do we commit to ensuring that the platform remains available or that the\n                        material on the\n                        platform is kept up to date.</p>\n                    <h2>Content Liability</h2>\n                    <p>We shall have no responsibility or liability for any content appearing on your Web site. You\n                        agree to indemnify\n                        and defend us against all claims arising out of or based upon your platform. No link(s) may\n                        appear on any\n                        page on your Web site or within any context containing content or materials that may be\n                        interpreted as\n                        libelous, obscene or criminal, or which infringes, otherwise violates, or advocates the\n                        infringement or\n                        other violation of, any third party rights.</p>\n\n                </div>\n\n\n\n        </main>\n\n\n    )\n};\n\nexport default TermsOfUse;\n","import React from 'react';\nimport env from \"../../../../env\";\n\n\nconst PrivacyPolicy = (props) => {\n    return (\n        <main>\n\n            <div className=\"ui text container privacy\">\n\n                <h1>Privacy Policy</h1>\n\n                <div className=\"ui divider\"></div>\n\n\n\n\n                    <p>Effective date: May 22, 2019</p>\n\n\n                    <p>Hackachieve (\"us\", \"we\", or \"our\") operates the\n                        {env.productionUrl} website (the \"Service\").</p>\n\n                    <p>This page informs you of our policies regarding the collection, use, and disclosure of personal\n                        data when you use our Service and the choices you have associated with that data.</p>\n\n                    <p>We use your data to provide and improve the Service. By using the Service,\n                        you agree to the collection and use of information in accordance with this policy. Unless\n                        otherwise defined in this Privacy Policy, terms used in this Privacy Policy have the same\n                        meanings as in our Terms and Conditions, accessible from {env.productionUrl}</p>\n\n\n                    <h2>Information Collection And Use</h2>\n\n                    <p>We collect several different types of information for various purposes to provide and improve our\n                        Service to you.</p>\n\n                    <h3>Types of Data Collected</h3>\n\n                    <h4>Personal Data</h4>\n\n                    <p>While using our Service, we may ask you to provide us with certain personally identifiable\n                        information that can be used to contact or identify you (\"Personal Data\"). Personally\n                        identifiable information may include, but is not limited to:</p>\n\n                    <ul>\n                        <li>Email address</li>\n                        <li>First name and last name</li>\n                        <li>Phone number</li>\n                        <li>Address, State, Province, ZIP/Postal code, City</li>\n                        <li>Cookies and Usage Data</li>\n                    </ul>\n\n                    <h4>Usage Data</h4>\n\n                    <p>We may also collect information how the Service is accessed and used (\"Usage Data\"). This Usage\n                        Data may include information such as your computer's Internet Protocol address (e.g. IP\n                        address), browser type, browser version, the pages of our Service that you visit, the time and\n                        date of your visit, the time spent on those pages, unique device identifiers and other\n                        diagnostic data.</p>\n\n                    <h4>Tracking &amp; Cookies Data</h4>\n                    <p>We use cookies and similar tracking technologies to track the activity on our Service and hold\n                        certain information.</p>\n                    <p>Cookies are files with small amount of data which may include an anonymous unique identifier.\n                        Cookies are sent to your browser from a website and stored on your device. Tracking technologies\n                        also used are beacons, tags, and scripts to collect and track information and to improve and\n                        analyze our Service.</p>\n                    <p>You can instruct your browser to refuse all cookies or to indicate when a cookie is being sent.\n                        However, if you do not accept cookies, you may not be able to use some portions of our\n                        Service.</p>\n                    <p>Examples of Cookies we use:</p>\n                    <ul>\n                        <li><strong>Session Cookies.</strong> We use Session Cookies to operate our Service.</li>\n                        <li><strong>Preference Cookies.</strong> We use Preference Cookies to remember your preferences\n                            and various settings.\n                        </li>\n                        <li><strong>Security Cookies.</strong> We use Security Cookies for security purposes.</li>\n                    </ul>\n\n                    <h2>Use of Data</h2>\n\n                    <p>Hackachieve uses the collected data for various purposes:</p>\n                    <ul>\n                        <li>To provide and maintain the Service</li>\n                        <li>To notify you about changes to our Service</li>\n                        <li>To allow you to participate in interactive features of our Service when you choose to do\n                            so\n                        </li>\n                        <li>To provide customer care and support</li>\n                        <li>To provide analysis or valuable information so that we can improve the Service</li>\n                        <li>To monitor the usage of the Service</li>\n                        <li>To detect, prevent and address technical issues</li>\n                    </ul>\n\n                    <h2>Transfer Of Data</h2>\n                    <p>Your information, including Personal Data, may be transferred to — and maintained on — computers\n                        located outside of your state, province, country or other governmental jurisdiction where the\n                        data protection laws may differ than those from your jurisdiction.</p>\n                    <p>If you are located outside Canada and choose to provide information to us, please note that we\n                        transfer the data, including Personal Data, to Canada and process it there.</p>\n                    <p>Your consent to this Privacy Policy followed by your submission of such information represents\n                        your agreement to that transfer.</p>\n                    <p>Hackachieve will take all steps reasonably necessary to ensure that your data is treated securely\n                        and in accordance with this Privacy Policy and no transfer of your Personal Data will take place\n                        to an organization or a country unless there are adequate controls in place including the\n                        security of your data and other personal information.</p>\n\n                    <h2>Disclosure Of Data</h2>\n\n                    <h3>Legal Requirements</h3>\n                    <p>Hackachieve may disclose your Personal Data in the good faith belief that such action is\n                        necessary to:</p>\n                    <ul>\n                        <li>To comply with a legal obligation</li>\n                        <li>To protect and defend the rights or property of Hackachieve</li>\n                        <li>To prevent or investigate possible wrongdoing in connection with the Service</li>\n                        <li>To protect the personal safety of users of the Service or the public</li>\n                        <li>To protect against legal liability</li>\n                    </ul>\n\n                    <h2>Security Of Data</h2>\n                    <p>The security of your data is important to us, but remember that no method of transmission over\n                        the Internet, or method of electronic storage is 100% secure. While we strive to use\n                        commercially acceptable means to protect your Personal Data, we cannot guarantee its absolute\n                        security.</p>\n\n                    <h2>Service Providers</h2>\n                    <p>We may employ third party companies and individuals to facilitate our Service (\"Service\n                        Providers\"), to provide the Service on our behalf, to perform Service-related services or to\n                        assist us in analyzing how our Service is used.</p>\n                    <p>These third parties have access to your Personal Data only to perform these tasks on our behalf\n                        and are obligated not to disclose or use it for any other purpose.</p>\n\n                    <h3>Analytics</h3>\n                    <p>We may use third-party Service Providers to monitor and analyze the use of our Service.</p>\n                    <ul>\n                        <li>\n                            <p><strong>Google Analytics</strong></p>\n                            <p>Google Analytics is a web analytics service offered by Google that tracks and reports\n                                website traffic. Google uses the data collected to track and monitor the use of our\n                                Service. This data is shared with other Google services. Google may use the collected\n                                data to contextualize and personalize the ads of its own advertising network.</p>\n                            <p>You can opt-out of having made your activity on the Service available to Google Analytics\n                                by installing the Google Analytics opt-out browser add-on. The add-on prevents the\n                                Google Analytics JavaScript (ga.js, analytics.js, and dc.js) from sharing information\n                                with Google Analytics about visits activity.</p>                <p>For more information\n                            on the privacy practices of Google, please visit the Google Privacy &amp; Terms web page: <a\n                                href=\"https://policies.google.com/privacy?hl=en\">https://policies.google.com/privacy?hl=en</a>\n                        </p>\n                        </li>\n                        <li>\n                            <p><strong>Mixpanel</strong></p>\n                            <p>Mixpanel is provided by Mixpanel Inc</p>\n                            <p>You can prevent Mixpanel from using your information for analytics purposes by\n                                opting-out. To opt-out of Mixpanel service, please visit this page: <a\n                                    href=\"https://mixpanel.com/optout/\">https://mixpanel.com/optout/</a></p>\n                            <p>For more information on what type of information Mixpanel collects, please visit the\n                                Terms of Use page of Mixpanel: <a\n                                    href=\"https://mixpanel.com/terms/\">https://mixpanel.com/terms/</a></p>\n                        </li>\n                    </ul>\n\n\n                    <h2>Links To Other Sites</h2>\n                    <p>Our Service may contain links to other sites that are not operated by us. If you click on a third\n                        party link, you will be directed to that third party's site. We strongly advise you to review\n                        the Privacy Policy of every site you visit.</p>\n                    <p>We have no control over and assume no responsibility for the content, privacy policies or\n                        practices of any third party sites or services.</p>\n\n\n                    <h2>Children's Privacy</h2>\n                    <p>Our Service does not address anyone under the age of 18 (\"Children\").</p>\n                    <p>We do not knowingly collect personally identifiable information from anyone under the age of 18.\n                        If you are a parent or guardian and you are aware that your Children has provided us with\n                        Personal Data, please contact us. If we become aware that we have collected Personal Data from\n                        children without verification of parental consent, we take steps to remove that information from\n                        our servers.</p>\n\n\n                    <h2>Changes To This Privacy Policy</h2>\n                    <p>We may update our Privacy Policy from time to time. We will notify you of any changes by posting\n                        the new Privacy Policy on this page.</p>\n                    <p>We will let you know via email and/or a prominent notice on our Service, prior to the change\n                        becoming effective and update the \"effective date\" at the top of this Privacy Policy.</p>\n                    <p>You are advised to review this Privacy Policy periodically for any changes. Changes to this\n                        Privacy Policy are effective when they are posted on this page.</p>\n\n\n                    <h2>Contact Us</h2>\n                    <p>If you have any questions about this Privacy Policy, please contact us:</p>\n                    <ul>\n                        <li>By email: {env.adminEmail}</li>\n\n                    </ul>\n\n\n\n\n\n\n\n            </div>\n\n\n        </main>\n\n    )\n};\n\nexport default PrivacyPolicy;\n\n","import React from 'react';\nimport {Link, withRouter} from \"react-router-dom\";\n\nconst Footer = (props) => {\n\n    switch (props.location.pathname) {\n\n        // case '/board':\n        //\n        //     return null;\n\n\n        default:\n            return (\n                <React.Fragment>\n                    <footer className=\"footer\">\n                        <div className=\"ui container\">\n                            <div className=\"ui stackable inverted divided equal height stackable grid\">\n                                <div className=\"three wide column\">\n                                    <h4 className=\"ui inverted header\">About Us</h4>\n                                    <div className=\"ui inverted link list\">\n                                        <Link to=\"/terms\" className=\"item\">Terms</Link>\n                                        <Link to=\"/privacy\" className=\"item\">Privacy</Link>\n                                        {/*<a href=\" #\" className=\"item\">Religious Ceremonies</a>*/}\n                                        {/*<a href=\" #\" className=\"item\">Gazebo Plans</a>*/}\n                                    </div>\n                                </div>\n                                {/*<div className=\"three wide column center\">*/}\n                                    {/*<h4 className=\"ui inverted header\">Services</h4>*/}\n                                    {/*<div className=\"ui inverted link list\">*/}\n                                        {/*<a href=\" #\" className=\"item\">Banana Pre-Order</a>*/}\n                                        {/*<a href=\" #\" className=\"item\">DNA FAQ</a>*/}\n                                        {/*<a href=\" #\" className=\"item\">How To Access</a>*/}\n                                        {/*<a href=\" #\" className=\"item\">Favorite X-Men</a>*/}\n                                    {/*</div>*/}\n                                {/*</div>*/}\n                                {/*<div className=\"seven wide column last\">*/}\n                                    {/*<h4 className=\"ui inverted header\">Footer Header</h4>*/}\n                                    {/*<p>Extra space for a call to action inside the footer that could help re-engage*/}\n                                        {/*users.</p>*/}\n                                {/*</div>*/}\n                            </div>\n                        </div>\n\n                    </footer>\n                </React.Fragment>\n            )\n\n\n    }\n\n\n};\n\nexport default withRouter(Footer);\n","import React, {Component} from 'react';\nimport {Field, reduxForm} from 'redux-form';\nimport {connect} from 'react-redux';\n\nclass Preferences extends Component {\n\n    renderInput({input, label, meta}) {\n        return (\n            <div className=\"form-group\">\n                <label>{label}</label>\n                <input {...input} className=\"form-control\"/>\n            </div>\n        )\n    }\n\n    onSubmit = (formValues) => {\n        console.log(formValues);\n    };\n\n    render() {\n\n        return (\n\n            <div className=\"home_header login_header\">\n                <a className=\"mobile-logo\" href=\" #\"><img src=\"/images/board/hackachieve-symbol.svg\" alt=\"Logo\"/></a>\n                <div className=\"login-sec\">\n\n\n                    <div className=\"form-wrapper\">\n\n                        <h3>Preferences</h3>\n\n                        <div className=\"login-inner\">\n\n\n\n\n                            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"login-form\">\n                                <Field name=\"title\" component={this.renderInput} label=\"Enter title\"/>\n                                <Field name=\"description\" component={this.renderInput} label=\"Enter description\"/>\n\n                                <button id=\"btnSignupForm\" className=\"button\">Submit</button>\n\n\n                            </form>\n\n\n                            {/*<hr></hr>*/}\n\n                            {/*<h5 className=\"padding\">You don’t need to decorate new passwords if you don’t want to,</h5>*/}\n\n                            {/*<div className=\"login-bottom\">*/}\n\n                            {/*<div className=\"f-img\"><a href=\"#\"><img src=\"/images/login-facebook.svg\" alt=\"Logo\"*/}\n                            {/*className=\"f-logo\">*/}\n                            {/*</a>*/}\n                            {/*</div>*/}\n                            {/*<div className=\"g-img\">*/}\n                            {/*<a href=\"#\"><img src=\"/images/login-google.svg\" alt=\"Logo\" className=\"g-logo\"></a>*/}\n                            {/*</div>*/}\n                            {/*</div>*/}\n\n\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"clear\"></div>\n            </div>\n\n\n        );\n    }\n}\n\n\nconst validate = (formValues) => {\n\n    const errors = {};\n\n    if (!formValues.title) {\n        errors.title = 'You must enter a title'\n    }\n    if (!formValues.description) {\n        errors.description = 'You must enter a description';\n    }\n    return errors;\n};\n\nconst formWrapped = reduxForm({\n    form: 'Preferences',\n    validate: validate\n})(Preferences);\n\nexport default connect(null, {\n    //some actions here\n})(formWrapped)\n","import React, {Component} from 'react';\nimport history from './../history';\nimport {connect} from 'react-redux'\nimport {Route, Router, Switch} from \"react-router-dom\";\nimport './App.scss';\nimport 'simplebar'; // or \"import SimpleBar from 'simplebar';\" if you want to use it manually.\nimport 'simplebar/dist/simplebar.css';\n\n/* Pages =========================================== */\nimport Landing from './pages/Landing/Landing';\nimport Header from \"./pages/Base/Header/Header\";\nimport Login from \"./pages/Landing/Login/Login\";\nimport Register from \"./pages/Landing/Register/Register\";\nimport {checkLoggedIn} from \"../actions/authActions\";\nimport Board from \"./pages/Board/Board\";\nimport env from '../env';\nimport TermsOfUse from \"./pages/Landing/Legal/TermsOfUse\";\nimport PrivacyPolicy from \"./pages/Landing/Legal/PrivacyPolicy\";\nimport Footer from \"./pages/Base/Footer/Footer\";\nimport Preferences from \"./pages/Landing/Preferences/Preferences\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.checkLoggedIn(); //check logged in on app init\n\n        console.log(`Initializing app. Environment is ${env.env}`);\n\n\n    }\n\n    render() {\n        return (\n            <Router history={history}>\n                <Header/>\n                <Switch>\n                    <Route path=\"/\" exact component={Landing}/>\n                    <Route path=\"/login\" component={Login}/>\n                    <Route path=\"/register\" component={Register}/>\n                    <Route path=\"/terms\" component={TermsOfUse}/>\n                    <Route path=\"/privacy\" component={PrivacyPolicy}/>\n                    <Route path=\"/board\" component={Board}/>\n                    <Route path=\"/preferences\" component={Preferences}/>\n                </Switch>\n                <Footer/>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n\n        token: state.auth.token,\n        isLoggedIn: state.auth.isLoggedIn\n    };\n};\n\nexport default connect(mapStateToProps, {\n    //actions here\n    checkLoggedIn\n\n\n})(App);\n\n","import {LOGIN_USER, LOGOUT_USER, REGISTER_USER, USER_INFO_REFRESH} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    isLoggedIn: null,\n    canRedirectLogin: false,\n    token: {\n        access: null,\n        refresh: null\n    },\n    user: {\n        firstName: null,\n        lastName: null,\n        email: null\n    }\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case LOGIN_USER:\n\n            const {access, refresh} = action.payload;\n\n            return {\n                ...state, isLoggedIn: true, token: {\n                    access, refresh\n                }\n            };\n\n        case LOGOUT_USER:\n            return {\n                ...state,\n                isLoggedIn: INITIAL_STATE.isLoggedIn,\n                canRedirectLogin: INITIAL_STATE.canRedirectLogin,\n                token: INITIAL_STATE.token,\n                user: INITIAL_STATE.user\n            };\n\n        case REGISTER_USER:\n\n            const {firstName, lastName, email} = action.payload;\n\n            return {\n                ...state, user: {\n                    firstName,\n                    lastName,\n                    email\n                },\n                canRedirectLogin: true //allow user auto login after register\n            };\n\n        case USER_INFO_REFRESH:\n            return {\n                ...state, user: {\n\n                    firstName: action.payload.first_name,\n                    lastName: action.payload.last_name,\n                    email: action.payload.email\n\n                }\n            };\n\n\n        default:\n            return state;\n    }\n}\n\n/*\n =========  Safe state update in reducers =========\n\n// From arrays\nRemoving: state.filter(element => element !== 'hi');\nadding: [...state, 'hi'];\nreplacing: state.map(el => el === 'hi' ? 'bye': el);\n\n//From objects\nupdating: {...state, name: 'Sam'};\nadding: {...state, age: 30};\nremoving: {state, age: undefined }\n\n*/\n","import {CLEAR_ALERT, SHOW_ALERT} from \"../../actions/types\";\n\nconst INITIAL_STATE = {\n    message: {\n        type: null,\n        title: null,\n        content: null\n    }\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SHOW_ALERT:\n\n            const {type, title, content} = action.payload;\n\n            return {\n                ...state, message: {\n                    type,\n                    title,\n                    content\n                }\n            };\n\n        case CLEAR_ALERT:\n            return {...state, message: INITIAL_STATE.message};\n\n        default:\n            return state;\n    }\n}\n\n\n/*\n\n =========  Safe state update in reducers =========\n\n// From arrays\nRemoving: state.filter(element => element !== 'hi');\nadding: [...state, 'hi'];\nreplacing: state.map(el => el === 'hi' ? 'bye': el);\n\n//From objects\nupdating: {...state, name: 'Sam'};\nadding: {...state, age: 30};\nremoving: {state, age: undefined }\n\n*/","import {LOAD_GOALS, FILTER_GOALS} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    goals: null,\n    filter: 'All'\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n\n        case LOAD_GOALS:\n\n            return {\n                ...state,\n                goals: action.payload,\n\n            };\n        case FILTER_GOALS: \n            return {\n                ...state,\n                filter: action.payload.category\n            }    \n\n        default:\n            return state;\n    }\n}\n\n\n/*\n\n =========  Safe state update in reducers =========\n\n// From arrays\nRemoving: state.filter(element => element !== 'hi');\nadding: [...state, 'hi'];\nreplacing: state.map(el => el === 'hi' ? 'bye': el);\n\n//From objects\nupdating: {...state, name: 'Sam'};\nadding: {...state, age: 30};\nremoving: {state, age: undefined }\n\n*/","import {OPEN_MODAL, CLOSE_MODAL, UPDATE_LOCATION, LOAD_CATEGORIES, CHANGE_BOARD_SHOW_GOAL} from \"../../actions/types\";\n\n// This is a generic UI reducer to handle state related with location, etc...\n\nconst INITIAL_STATE = {\n    location: {pathname: '/'},\n    modals: { //controls opening and closing of modals\n        shortTermGoal: {\n            status: false,\n            id: null\n        },\n        longTermGoal: {\n            status: false,\n            id: null\n        },\n        goalContent: {\n            status: false,\n            id: null\n        },\n        editShortTermGoal: {\n            status: false,\n            id: null\n        },\n        editLongTermGoal: {\n            status: false,\n            id: null\n        }\n    },\n    boardCategories: [],\n    boardShowGoals: 'all'\n};\n\nexport default (state = INITIAL_STATE, action) => {\n\n    switch (action.type) {\n        case UPDATE_LOCATION:\n            return {...state, location: action.payload};\n\n        case OPEN_MODAL:\n\n            return {\n                ...state, modals: {\n                    ...state.modals,\n                    [action.payload.name]: {\n                        status: true,\n                        id: action.payload.id\n                    }\n                }\n            };\n\n        case CLOSE_MODAL:\n\n            return {\n                ...state, modals: {\n                    ...state.modals,\n                    [action.payload.name]: {\n                        status: false,\n                        id: action.payload.id\n                    }\n                }\n            };\n\n        case LOAD_CATEGORIES:\n\n            return {\n                ...state,\n                boardCategories: action.payload\n            };\n\n        case CHANGE_BOARD_SHOW_GOAL:\n            return {\n                ...state,\n                boardShowGoals: action.payload\n            };\n\n\n        default:\n            return state;\n    }\n}\n\n\n/*\n\n =========  Safe state update in reducers =========\n\n// From arrays\nRemoving: state.filter(element => element !== 'hi');\nadding: [...state, 'hi'];\nreplacing: state.map(el => el === 'hi' ? 'bye': el);\n\n//From objects\nupdating: {...state, name: 'Sam'};\nadding: {...state, age: 30};\nremoving: {state, age: undefined }\n\n*/","import {\n    SET_CHECKLIST_ITEM,\n    FETCH_ITEMS,\n    UPDATE_CHECKLIST_ITEM,\n    CHANGE_ITEM_STATUS,\n    DELETE_CHECKLIST_ITEM\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    items: [],\n    isTextAreaOpen: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case SET_CHECKLIST_ITEM:\n            return {\n                ...state,\n                items: [\n                    ...state.items,\n                    action.payload\n                ],\n            };\n        case FETCH_ITEMS:\n            return {\n                ...state,\n                items: action.payload\n            };\n        case UPDATE_CHECKLIST_ITEM:\n            let items = state.items\n            let newItems = items.map(item => {\n                if (action.payload.id === item.id) {\n\n                    item = action.payload\n                }\n                return item\n\n            });\n            return {\n                ...state,\n                items: newItems\n            };\n        case CHANGE_ITEM_STATUS:\n            let itemStatus = state.items\n            let newItem = itemStatus.map(item => {\n                if (action.payload.id === item.id) {\n                    item.status = !item.status;\n                }\n                return item;\n\n            });\n            return {\n                ...state,\n                items: newItem\n            };\n        case DELETE_CHECKLIST_ITEM:\n            const newItemDel = state.items.filter(item => item.id !== action.payload.id);\n            return {\n                ...state,\n                items: newItemDel\n            };\n\n\n        default:\n            return state;\n    }\n}\n \n\n","/*#############################################################|\n|                        REDUCERS\n*##############################################################*/\n\nimport {combineReducers} from 'redux'\nimport authReducer from './authReducer';\nimport {reducer as formReducer} from 'redux-form';\nimport alertReducer from \"./UI/alertReducer\";\nimport goalReducer from './goalReducer';\nimport uiReducer from './UI/uiReducer';\nimport checklistReducer from './checklistReducer';\n\nexport default combineReducers({\n    auth: authReducer,\n    form: formReducer,\n    alert: alertReducer,\n    goal: goalReducer,\n    ui: uiReducer,\n    checklist: checklistReducer,\n});\n\n\n\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n//Redux specificc\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport reducers from './reducers';\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(thunk, logger))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n\n    document.querySelector(\"#root\"));\n\n\n\n\n"],"sourceRoot":""}